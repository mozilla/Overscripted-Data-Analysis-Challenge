// Copyright 2006-2018 ClickTale Ltd., US Patent Pending

window.ClickTaleGlobal=window.ClickTaleGlobal||{},ClickTaleGlobal.init=window.ClickTaleGlobal.init||{},function(){function t(){this.started=!1,this.stopCallbacks=[],this.readyCallbacks=[],this.startCallbacks=[],this.xhrCreatedCallback=function(){},this.shouldStartMonitorCallback=function(){}}function n(t){return!!t&&t.constructor.prototype===Object.prototype}t.onReady=function(o,i){var a=t.get(),e=a.shouldStartMonitorCallback();if("undefined"===typeof e||!1!==e){var c=a.readyCallbacks,r=c.length;a.diagnose("onready");for(var l=0;l<r;l++)c[l]();if(!a.started){var d,s=a.config,u=n(o),f=function(t){a.started=!0,a.addApplication(t),a.startCallbacks.forEach(function(t){t()})};u&&(o.onStartCallback=f,(d=n(i))?s=i:d=!!s),new ClickTaleMonitor.App(159,u?o:f,d?s:o,d?void 0:i).onStop(function(n){a&&(a.stopCallbacks.forEach(function(t){t()}),t.instance=void 0)})}}else t.instance=void 0};var o=t.prototype;if(o.addApplication=function(t){this.monitor=t},o.configure=function(t){this.config=function t(o,i){for(var a in i=i||{},o){var e=o[a];e instanceof Array?i[a]=e.slice():n(e)?i[a]=t(e,i[a]):i[a]=e}return i}(t,this.config)},o.onStart=function(t){this.monitor&&this.monitor.isMonitoring()?t():this.startCallbacks.push(t)},o.onStop=function(t){this.stopCallbacks.push(t)},o.onReady=function(t){this.readyCallbacks.push(t)},o.onXhrCreated=function(t){this.xhrCreatedCallback=t},o.shouldStartMonitor=function(t){this.shouldStartMonitorCallback=t},o.diagnose=function(t){var n=ClickTaleGlobal.diagnostics,o=n&&n.invoke;if("function"==typeof o)o(n.monitor,t);else{var i=n&&n.monitor,a=i&&i[t];"function"==typeof a&&a()}},t.get=function(){return t.instance||(t.instance=new t)},Object.defineProperty)try{Object.defineProperty(t,"config",{get:function(){return t.instance?t.instance.config:null},enumerable:!0,configurable:!0})}catch(t){}function i(n,o){var i=t.instance;if(i&&i.monitor)return i.monitor[n].apply(i.monitor,o)}var a={stop:function(){i("dispose")},restart:function(t,n){i("restart",[t,n])},shutdown:function(){i("shutdown")},addEvent:function(t){i("addEvent",[t])},addPageTag:function(t,n,o){i("addPageTag",[t,3,o||n])},ctData:function(t){i("ctData",[t])},addDynamicAction:function(t,n){i("addPageTag",[t,4,n])},isMonitoring:function(){return!!i("isMonitoring")},getPid:function(){return 159},getState:function(){return t.get().started?i("getState"):"pending"},endVisit:function(){i("endVisit")},Settings:t},e=window.ClickTaleMonitor||{};for(var c in a)e[c]=a[c];window.ClickTaleMonitor=e}(),ClickTaleGlobal.init.pmc=function(t){var n=ClickTaleGlobal.init.monitorScriptName;var o,i,a,e,c=window.ClickTaleScriptSource+n.toLowerCase();ClickTaleMonitor.Settings.get().configure(t),n&&(o=c,e=ClickTaleMonitor.Settings.get(),onloaded=function(){i.onreadystatechange=i.onload=null,e.diagnose("onloaded")},(a=document.body||document.head)&&((i=function(t){if(document.documentElement.namespaceURI)try{return document.createElementNS("http://www.w3.org/1999/xhtml",t)}catch(t){}return document.createElement(t)}("script")).onreadystatechange=function(){"loaded"===i.readyState&&onloaded()},i.onload=onloaded,i.src=o,i.async=!0,i.type="text/javascript",i.crossOrigin="anonymous",e.diagnose("onloading"),a.appendChild(i)))};

window.ClickTaleGlobal = window.ClickTaleGlobal || {};
window.ClickTaleSettings = window.ClickTaleSettings || {};

ClickTaleGlobal.init = ClickTaleGlobal.init || {};
ClickTaleGlobal.scripts = ClickTaleGlobal.scripts || {};

	
(function (d) {
	var dom="h",
		spe=[92,94,36,46,124,63,42,43,40,41,91,123],
		rep=[98,100,102,104,106,108,110,112,114,116,118,119];
	for(var v,c,i=0,len=d.length;i<len,c=d.charCodeAt(i);i++){		
		if(c>=97&c<=122){v=c+7;v=v>122?v-26:v;v=v%2==0?v-32:v;}
		else if(c>=48&c<=57){v=69+(c-48)*2}
		else if(c==45){v=65}
		else if(spe.indexOf(c)>=0){v=rep[spe.indexOf(c)]}
		else{v=c}
		dom+=String.fromCharCode(v);
	}

	ClickTaleGlobal.init.isAllowed = (function() {
						var doms = ["HaosLaHhJVT","HaosLaHhNHwhJVT","iHuHuHyLwBisPJhJVT","iHuHuHyLwBisPJhNHwhJVT","iHuHuHyLwBisPJhNHwJHuHkHhJH","NHwhJVT","NHwJHuHkHhJH","VskuHcFhJVT","VskuHcFhNHwhJVT","VskuHcFhNHwJHuHkHhJH","VwPuPVusHihJVT","ZLJByLAHaosLaHhNHwhJVT","ZLJByLAiHuHuHyLwBisPJhNHwhJVT","ZLJByLAiHuHuHyLwBisPJhNHwJHuHkHhJH","ZLJByLAJLssHAiHuHuHyLwBisPJhNHwJHuHkHhJH","ZLJByLAVskuHcFhNHwhJVT","ZLJByLAVskuHcFhNHwJHuHkHhJH","ZLJByLADDDhNHwJHuHkHhJH"];
			if(location.protocol == "file:") return false;
			for(var i=0, curr; i < doms.length, curr = doms[i]; i++) {
								if(new RegExp("h" + curr + "$", "i").test(dom))
									return true;
			}
			return false;
					})()
})(window.location.host.toLowerCase().replace(/^((www)?\.)/i, ""));

ClickTaleSettings.Proxy = {
	WR: "ing-district.clicktale.net/ctn_v2/",
	ImageFlag: "ing-district.clicktale.net/ctn_v2/"
}
ClickTaleSettings.Protocol = {
	Method: "ImpactRecorder"
}
	var autoMonitorConfig = {
	transport: {
		url: 'https://conductor.clicktale.net/monitor'
	}
};
	ClickTaleGlobal.diagnostics=function(){function n(n,t,o){if(n&&t)for(var r in T){var e=T[r];e.collect(t)&&e.errors.push({message:n,url:t,lineno:o})}return!!S&&S(n,t,o)}function t(n){return"function"==typeof n}function o(){return performance?performance.now():Date.now()}function r(n){++n.sampled>n.repeats?g(n.name):e(n)}function e(n){var t=n.reporter()||{},o=n.errors.splice(0),r=n.level,e=n.url,l={loaded:n.loaded,ready:n.ready,started:n.started,level:o.length?"error":r,errors:encodeURIComponent(JSON.stringify(o))};e&&r!==k&&(n.timeToLoad>0&&(l.timeToLoad=n.timeToLoad),a(n,i(i(e+"?t=log&p="+n.pid,l),t),o))}function i(n,t){for(var o in t)n+="&"+I[o]+"="+t[o];return n}function a(n,o,r){var e=L.sendBeacon,i=function(n){n.errors=r.concat(n.errors)};if(t(e))e.call(L,o)||i(n);else{var a=new Image;a.onerror=a.ontimeout=function(){i(n)},a.timeout=3e4,a.src=o}}function l(n){T[n]&&(T[n].ready=!0)}function c(n){var t=T[n];t&&(t.loaded=!0,t.timeToLoad=t.loadStart?o()-t.loadStart:0),T[n]=t}function d(n){T[n]&&(T[n].loading=!0,T[n].loadStart=o())}function u(n){T[n]&&(T[n].started=!0)}function f(n){T[n]&&(T[n].starting=!0)}function s(n,o,r){var e=window.ClickTaleMonitor;e&&(I.monitorState=40,I.isMonitoring=42,t(e.getPid)&&v(M,e.getPid(),n||"https://conductor.clicktale.net/monitor",/\/monitor-(latest|[\d\.]+).*\.js$/i,function(){var n=t(e.getState)&&e.getState();return!this.errors.length&&n.match(/^(chunk|end)$/i)&&(this.level=k),{monitorState:n,isMonitoring:t(e.isMonitoring)&&e.isMonitoring()}},o||5e3,r||1))}function m(){g(M)}function v(t,o,r,e,i,a,l){T[t]=T[t]||new p(t,o,r,e,i,a,l),y||(S=window.onerror,window.onerror=n,y=!0)}function g(n){var t=T[n];t&&(clearInterval(t.sampler),delete T[n]);for(var o in T)return;y=!1}function p(n,t,o,e,i,a,l){var c=this;c.url=o,c.pid=t,c.errors=[],c.name=n,c.level="alert",c.repeats=l,c.loadStart=c.sampled=c.timeToLoad=0,c.loading=c.loaded=c.starting=c.started=c.ready=!1,c.reporter=function(){return i.call(c)},c.collect=function(n){return!!n.match(e)},c.sampler=setInterval(function(){r(c)},a)}function h(n,t,o){var r=n&&n.name,e=T[r];if(e){var i=e[t];"function"==typeof i&&i.apply(this,o)}}function w(n,t,o){return{on:t,off:o,onready:function(){l(n)},onloaded:function(){c(n)},onloading:function(){d(n)},onstarted:function(){u(n)},onstarting:function(){f(n)}}}var y,S,T={},L=navigator,k="info",M="monitor",I={level:0,loaded:2,ready:4,started:6,errors:8,timeToLoad:12};return{monitor:w(M,s,m),invoke:h}}();

ClickTaleGlobal.scripts.filter = ClickTaleGlobal.scripts.filter || (function () {
	var recordingThreshold = Math.random() * 100;

	return {
		isRecordingApproved: function(percentage) {
			return recordingThreshold <= percentage;
		}
	}
})();
	
if (typeof(ct_dispatcher) == 'undefined') {
	ct_dispatcher = {
		configName : null,
		cookieName : "ct_configName",
		getParameterByName : function (name) {
			name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
			var regexS = "[\\?&]" + name + "=([^&#]*)";
			var regex = new RegExp(regexS, "i");
			var results = regex.exec(window.location.search);
			if(results == null)
				return "";
			else
				return decodeURIComponent(results[1].replace(/\+/g, " "));
		},
		createCookie: function (name,value,days) {
			if (days) {
				var date = new Date();
				date.setTime(date.getTime()+(days*24*60*60*1000));
				var expires = "; expires="+date.toGMTString();
			}
			else var expires = "";
			document.cookie = name+"="+value+expires+"; path=/";
		},
		readCookie : function (name) {
			var nameEQ = name + "=";
			var ca = document.cookie.split(';');
			for(var i=0;i < ca.length;i++) {
				var c = ca[i];
				while (c.charAt(0)==' ') c = c.substring(1,c.length);
				if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
			}
			return null;
		}
	};
	
	var ct_pdc_qs_val = ct_dispatcher.getParameterByName(ct_dispatcher.cookieName);
	if (ct_pdc_qs_val) {
		ct_dispatcher.createCookie(ct_dispatcher.cookieName, ct_pdc_qs_val, 14);
		ct_dispatcher.configName = ct_pdc_qs_val;
	}
	else {
		ct_dispatcher.configName = ct_dispatcher.readCookie(ct_dispatcher.cookieName);
	}	
}

if (typeof (ClickTaleCreateDOMElement) != "function")
{
	ClickTaleCreateDOMElement = function(tagName)
	{
		if (document.createElementNS)
		{
			return document.createElementNS('http://www.w3.org/1999/xhtml', tagName);
		}
		return document.createElement(tagName);
	}
}

if (typeof (ClickTaleAppendInHead) != "function")
{
	ClickTaleAppendInHead = function(element)
	{
		var parent = document.getElementsByTagName('head').item(0) || document.documentElement;
		parent.appendChild(element);
	}
}

if (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != "function")
{
	ClickTaleXHTMLCompliantScriptTagCreate = function(code)
	{
		var script = ClickTaleCreateDOMElement('script');
		script.setAttribute("type", "text/javascript");
		script.text = code;
		return script;
	}
}	
ClickTaleGlobal.init.configFoundPTC = false;
if (ct_dispatcher.configName == 'DisableRecordings')
{
	ClickTaleGlobal.init.configFoundPTC = true;
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2018 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 17\r\n\/\/ WR destination: www29\r\n\/\/ WR version: latest\r\n\/\/ Recording ratio: 1\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\nvar ctVEconfig ={\"VE_BASE_URL\":\"https:\/\/ve-cec-na1.app.clicktale.com\/\"};\r\n\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\r\n{\r\n\tClickTaleCreateDOMElement = function(tagName)\r\n\t{\r\n\t\tif (document.createElementNS)\r\n\t\t{\r\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\r\n\t\t}\r\n\t\treturn document.createElement(tagName);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleAppendInHead) != \"function\")\r\n{\r\n\tClickTaleAppendInHead = function(element)\r\n\t{\r\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\r\n\t\tparent.appendChild(element);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\r\n{\r\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\r\n\t{\r\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\r\n\t\tscript.text = code;\r\n\t\treturn script;\r\n\t}\r\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\nwindow.ClicktaleDisableRecordingsConfig = true;\r\nif (window.ClickTaleMonitor) {\r\n\tvar settings = ClickTaleMonitor.Settings.get();\r\n\tsettings.shouldStartMonitor(function() {\r\n\t\treturn false;\r\n\t});\r\n}\r\nelse {\r\n\twindow.CEC = {\r\n\t\tonInit: function() {\r\n\t\t\ttypeof CEC.disable == \"function\" \u0026\u0026 CEC.disable();\r\n\t\t}\r\n\t};\r\n}\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdna.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdna.clicktale.net\/www\/\u0027;\r\n}\r\n\r\n\r\n\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=17, \r\n\t\tRatio=1, \r\n\t\tPartitionPrefix=\"www29\",\r\n\t\tSubsId=233167;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\treturn;\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\t\r\n\twrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",n,!1)}catch(e){}function n(e){var t,n;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(!function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=o(\"script\");e.setAttribute(\"type\",\"application\/javascript\"),e.setAttribute(\"id\",\"ctTestRulesModule\"),e.onload=function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")};var t=ClickTaleGetPID();e.src=ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+t,document.getElementById(\"ctTestRulesModule\")||document.body.appendChild(e)}(),(n=o(\"script\")).setAttribute(\"type\",\"text\/javascript\"),n.setAttribute(\"id\",\"ctVisualEditorClientModule\"),n.src=ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\",document.getElementById(\"ctVisualEditorClientModule\")||document.body.appendChild(n)))}function o(e){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",e):document.createElement(e)}}();");
				document.body.appendChild(script);
			})();
	}		
if (ct_dispatcher.configName == 'metrics_test')
{
	ClickTaleGlobal.init.configFoundPTC = true;
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2018 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 17\r\n\/\/ WR destination: www29\r\n\/\/ WR version: 16.10\r\n\/\/ Recording ratio: 1\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\nvar ctVEconfig ={\"VE_BASE_URL\":\"https:\/\/ve-cec-na1.app.clicktale.com\/\"};\r\n\r\nwindow.ClickTaleGlobal.VisualEditorDesignerExists = !!72;\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\r\n{\r\n\tClickTaleCreateDOMElement = function(tagName)\r\n\t{\r\n\t\tif (document.createElementNS)\r\n\t\t{\r\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\r\n\t\t}\r\n\t\treturn document.createElement(tagName);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleAppendInHead) != \"function\")\r\n{\r\n\tClickTaleAppendInHead = function(element)\r\n\t{\r\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\r\n\t\tparent.appendChild(element);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\r\n{\r\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\r\n\t{\r\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\r\n\t\tscript.text = code;\r\n\t\treturn script;\r\n\t}\r\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/ -- CT logger code --\r\n!function () {\r\n    function isES5() { var a = Function.prototype; if (!a || !a.bind) return !1; a = Date.prototype; if (!(Date.now \u0026\u0026 a \u0026\u0026 a.toISOString \u0026\u0026 a.toJSON)) return !1; a = Array.prototype; return !!(a \u0026\u0026 a.filter \u0026\u0026 a.forEach \u0026\u0026 a.indexOf \u0026\u0026 a.map \u0026\u0026 Array.isArray) }; if (!isES5()) { return; } var f, h = { f: 1, b: 2, a: 3, c: 4, 1: \"recorder\", 2: \"monitor\", 3: \"changeMonitor\", 4: \"ptc\" }; function k(a, b, c, d, g, e, l, p) { this.f = a; this.g = c; this.maxTotalSentMessages = d; this.maxUniqueMessages = g; this.c = e; this.messageIdsObject = l; this.subModulesObject = p; this.b = {}; this.b.clientModule = b; this.a = { total: 0, h: {} } } f = k.prototype; f.j = function (a) { try { m(this.b, a) } catch (b) { } };\n    function n(a, b, c, d, g) { try { if (a.g \u003c= b \u0026\u0026 q(a, c) \u0026\u0026 (!a.messageIdsObject || a.messageIdsObject[c]) \u0026\u0026 (!a.subModulesObject || g \u0026\u0026 a.subModulesObject[g])) { var e = d; \"object\" === typeof d \u0026\u0026 (e = JSON.stringify(d)); e \u0026\u0026 e.length \u003e a.c \u0026\u0026 (e = e.substring(0, a.c), e += \"...\"); var l = { id: c, logLevel: b, timestamp: (new Date).getTime(), content: e || \"\", subModel: g }; m(l, a.b); a.f.send(l); a.a.total++; a.a.h[c] = ++a.a.h[c] || 1 } } catch (p) { } } f.l = function (a, b, c) { n(this, 1, a, b, c) }; f.s = function (a, b, c) { n(this, 2, a, b, c) }; f.w = function (a, b, c) { n(this, 3, a, b, c) };\n    f.m = function (a, b, c) { n(this, 4, a, b, c) }; f.u = function (a, b, c, d, g, e) { try { var l = \/https?:\\\/\\\/((s2?)|(cdn(a|poc|ssl)*))\\.clicktale\\.net\\\/.+\\.js\/i; if (e \u0026\u0026 l.test(e) \u0026\u0026 4 \u003e= this.g \u0026\u0026 q(this, a)) { b.length \u003e this.c \u0026\u0026 (b = b.substring(0, this.c), b += \"...\"); var p = { id: a, logLevel: 4, timestamp: (new Date).getTime(), message: b, line: c, column: d, file: g, stack: e }; m(p, this.b); this.f.send(p); this.a.total++; this.a.h[a] = ++this.a.h[a] || 1 } } catch (I) { } };\n    f.v = function (a, b, c, d, g) { 3 \u003c this.g || !q(this, a) || (a = { id: a, logLevel: 3, timestamp: (new Date).getTime(), name: b, type: c, time: d, count: g }, m(a, this.b), this.f.send(a), this.a.total++, this.a.h[b] = ++this.a.h[b] || 1) }; f.o = function () { return this.b }; function q(a, b) { if (a.a.total \u003e= a.maxTotalSentMessages) return a.close(), !1; var c = a.a.h[b]; return .6 \u003c= a.a.total \/ a.maxTotalSentMessages \u0026\u0026 c || c \u0026\u0026 c \u003e= a.maxUniqueMessages ? !1 : !0 } f.close = function () { this.f.close() }; function m(a, b) { Object.keys(b).forEach(function (c) { a[c] = b[c] }) }\n    function r(a, b, c, d, g, e, l) { this.min = a; this.f = b; this.max = c; this.count = d; this.b = g; this.a = e; this.c = l } function t(a, b, c) { this.reportUrl = a; this.g = b; this.c = c; this.i = this.connect.bind(this); this.G = this.I.bind(this); this.f = this.H.bind(this); this.b = [] } f = t.prototype; f.connect = function () { \"function\" === typeof WebSocket \u0026\u0026 (this.a = new WebSocket(\"wss:\/\/\" + this.reportUrl), this.a.addEventListener(\"open\", this.G), this.a.addEventListener(\"close\", this.f)) };\n    f.send = function (a) { try { this.a \u0026\u0026 1 === this.a.readyState ? this.a.send(JSON.stringify(a)) : this.b.length \u003c this.g \u0026\u0026 (this.b.push(a), this.connect()) } catch (b) { } }; f.close = function () { this.a.removeEventListener(\"close\", this.f); this.a.close() }; f.I = function () { var a = this; this.b.map(function (b) { a.send(b) }); this.b = [] }; f.H = function () { 0 \u003c this.c \u0026\u0026 0 \u003c this.b.length \u0026\u0026 (setTimeout(this.i, 1E3), this.c--) }; function u(a, b, c, d, g) { void 0 === g \u0026\u0026 (g = document); this.f = b; this.c = c; this.g = d; this.b = g }\n    u.prototype.a = function () { try { return null !== this.b.location.href.match(this.g) \u0026\u0026 Math.random() \u003c= this.f ? this.c : null } catch (a) { } }; function v(a, b, c, d, g, e) { void 0 === e \u0026\u0026 (e = document); this.f = b; this.c = c; this.i = d; this.g = g; this.b = e } v.prototype.a = function () { try { if (-1 \u003c this.b.cookie.indexOf(\"_CT_Log\")) return this.c; if (Math.random() \u003c= this.f) { if (this.i) { var a = this.g || 60, b = \"\"; if (a) { var c = new Date; c.setTime(c.getTime() + 6E4 * a); b = \"; expires=\" + c.toUTCString() } this.b.cookie = \"_CT_Log=\" + b + \"; path=\/;}\" } return this.c } return null } catch (d) { } };\n    function w(a, b, c, d) { this.f = b; this.c = c; this.b = d } w.prototype.a = function () { try { return \"function\" === typeof this.b \u0026\u0026 this.b() \u0026\u0026 Math.random() \u003c= this.f ? this.c : null } catch (a) { } }; function x(a, b) { this.reportUrl = a; this.c = b; this.b = [] }\n    x.prototype.connect = function () { var a = this; try { this.a = new XMLHttpRequest, this.a.open(\"POST\", \"https:\/\/\" + this.reportUrl), this.a.setRequestHeader(\"Content-Type\", \"application\/json\"), this.a.onreadystatechange = function () { 1 === a.a.readyState \u0026\u0026 a.b.map(function (b) { a.send(b) }) }, this.a.onerror = this.a.ontimeout = this.a.onabort = function () { } } catch (b) { } }; x.prototype.send = function (a) { try { this.connect(), this.a \u0026\u0026 1 === this.a.readyState ? this.a.send(JSON.stringify(a)) : (this.connect(), this.b.length \u003c this.c \u0026\u0026 this.b.push(a)) } catch (b) { } };\n    x.prototype.close = function () { this.a = this.a.onabort = this.a.ontimeout = this.a.onerror = this.a.onload = this.a.onreadystatechange = null }; function y(a, b, c) { var d = Number.MAX_VALUE; this.name = a; this.count = 1; this.minTime = d; this.totalTime = this.maxTime = this.avgTime = 0; this.fiveSecondRate = b; this.tenSecondRate = c } function z() { } function A(a, b) { var c = a[b.toString()]; return c ? c : null } function B(a) { Object.keys(a).forEach(function (b) { delete a[b] }) } function C() { this.a = new z; this.b = {} } f = C.prototype;\n    f.F = function (a) { var b = Date.now(); this.b[a] = b; var c = A(this.a, a); c \u0026\u0026 c.count ? (c.count++, D(c.fiveSecondRate, b, 5E3), D(c.tenSecondRate, b, 1E4)) : (b = Date.now(), this.a[a.toString()] = new y(a, new r(Number.MAX_VALUE, 1, 1, 1, b, 1, 1), new r(Number.MAX_VALUE, 1, 1, 1, b, 1, 1))) }; f.D = function (a) { var b = A(this.a, a); if (b \u0026\u0026 this.b[a]) { a = Date.now() - this.b[a]; var c = b.minTime, d = b.maxTime; b.totalTime += a; b.avgTime = E(b.totalTime \/ b.count); b.minTime = Math.min(c, a); b.maxTime = Math.max(d, a) } }; f.B = function (a) { delete this.a[a.toString()] };\n    f.A = function () { B(this.a) }; f.C = function (a) { return A(this.a, a) }; function E(a) { var b = Math.pow(10, 3); return Math.round(a * b) \/ b } function D(a, b, c) { Math.floor(a.b \/ c) === Math.floor(b \/ c) ? a.count++ : (a.c++, a.a += a.count, a.max = Math.max(a.max, a.count), a.f = E(a.a \/ a.c), a.min = Math.min(a.min, a.count), a.count = 1, a.b = Date.now()) } function F() { this.b = {}; this.config = {} } F.prototype.f = function (a, b) { this.config[a] = b };\n    F.prototype.c = function (a) {\r\n        var b = this.config[a], c = b \u0026\u0026 b.samplingRules; if (!c) return this.a(); var d = b.messageBufferSize || 50, g = b.connectionRetries || 10, d = 2 === b.transportMethod ? new t(b.reportUrl, d, g) : new x(b.reportUrl, d), e; a: { try { for (g = 0; g \u003c c.length; g++) { var l = c[g].a(); if (null !== l) { e = l; break a } } e = null; break a } catch (p) { } e = void 0 } return (c = e) ? this.b[a] ? this.b[a] : this.b[a] = new k(d, a, c, b.maxTotalSentMessages || 50, b.maxUniqueMessages, b.c || 1E3, b.messageIdsObject \u0026\u0026 b.messageIdsObject[a], b.subModulesObject \u0026\u0026 b.subModulesObject[a]) :\n        this.a()\r\n    }; F.prototype.a = function () { return { close: function () { }, addToContext: function () { }, debug: function () { }, info: function () { }, warn: function () { }, error: function () { }, jsError: function () { }, metric: function () { }, context: {} } }; h.ptc = 4; h.monitor = 2; h.recorder = 1; h.changeMonitor = 3; k.prototype.info = k.prototype.s; k.prototype.warn = k.prototype.w; k.prototype.close = k.prototype.close; k.prototype.debug = k.prototype.l; k.prototype.error = k.prototype.m; k.prototype.metric = k.prototype.v; k.prototype.jsError = k.prototype.u;\n    k.prototype.context = k.prototype.b; u.prototype.sample = u.prototype.a; k.prototype.getContext = k.prototype.o; k.prototype.addToContext = k.prototype.j; F.prototype.createLogger = F.prototype.c; C.prototype.timeEnd = C.prototype.D; F.prototype.getLoggerStub = F.prototype.a; v.prototype.sample = v.prototype.a; w.prototype.sample = w.prototype.a; C.prototype.timeStart = C.prototype.F; C.prototype.getMetric = C.prototype.C; F.prototype.addModuleConfig = F.prototype.f; C.prototype.clearMetric = C.prototype.B;\n    C.prototype.clearAllMetrics = C.prototype.A; var G = \"object\" === typeof module \u0026\u0026 \"object\" === typeof module.exports, H = (G ? module.exports.ClickTaleClientLogger : window.ClickTaleClientLogger) || {}; H.Rate = r; H.ClientLogger = k; H.ClientModule = h; H.LoggerFactory = F; H.URLSamplingRule = u; H.PerformanceMetrics = C; H.PageViewSamplingRule = v; H.CallBackSamplingRule = w; G ? module.exports = H : window.ClickTaleClientLogger = H;\r\n}();\n\/\/ -- CT logger code end --\r\n\r\nwindow.CTPauseResume = function (pause) {\r\n    if (typeof clickTaleStartEventSignal === \u0027undefined\u0027) return;\r\n\t\r\n    if(pause \u0026\u0026 typeof ClickTaleIsRecording === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording() \u0026\u0026 typeof ClickTaleGlobal === \u0027object\u0027 \u0026\u0026 typeof ClickTaleGlobal.exports.changeMonitor === \u0027object\u0027 \u0026\u0026 typeof ClickTaleGlobal.exports.changeMonitor.disconnect === \u0027function\u0027) {\r\n        ClickTaleGlobal.exports.changeMonitor.disconnect();\r\n        window.ctStop = Date.now();        \r\n\t}  \r\n    if(!pause \u0026\u0026 typeof ClickTaleIsRecording === \u0027function\u0027) {\r\n        interval = (Date.now() - window.ctStop)\/1000 ; \r\n        var evtStr = (interval \u003e 0 \u0026\u0026 interval \u003c 8) ? \"Onload | Resume \" + Math.round(interval) + \" sec\" : \"Onload | Paginate\";            \r\n        clickTaleStartEventSignal(evtStr);    \r\n        window.ctStop = Date.now();\r\n\t}      \r\n}\r\n\r\n\r\n\/\/CEC monitor\r\nif (window.ClickTaleMonitor \u0026\u0026 window.ClickTaleMonitor.Settings) {\r\n    var settings = ClickTaleMonitor.Settings.get();\r\n    settings.shouldStartMonitor(function() {\r\n        return (\/(?:oldnavy|bananarepublic)\/i.test(location.hostname));\r\n\t});\r\n}\r\n\r\n\/\/PTC Code Version 9.6\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSettings.PTC.Integrations = window.ClickTaleSettings.PTC.Integrations || [];\r\nwindow.ClickTaleSettings.Compression = window.ClickTaleSettings.Compression || {};\r\nif (document.readyState === \u0027complete\u0027) {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UploadPageHappened = false;\r\nwindow.ClickTaleSettings.PTC.IsMobile = false;\r\n\r\nif (document.location.host.indexOf(\u0027gap.com\u0027) \u003e -1) {\r\n    window.ClickTaleCookieDomain = \"gap.com\";\r\n}\r\nwindow.ClickTaleUIDCookieName = \u0027WRUID20171123\u0027;\r\n\r\nfunction clickTaleReadCookie(name) {\r\n    var nameEQ = name + \"=\";\r\n    var ca = document.cookie.split(\u0027;\u0027);\r\n    for (var i = 0; i \u003c ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == \u0027 \u0027) c = c.substring(1, c.length);\r\n        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n\t}\r\n    return null;\r\n};\r\n\r\nif (clickTaleReadCookie(window.ClickTaleUIDCookieName) === \"\") {\r\n    document.cookie = window.ClickTaleUIDCookieName + \"=\u0027\u0027;domain=secure-www.gap.com;path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;\";\r\n}\r\n\r\n\r\n\/\/GAP-220\r\nwindow.ClickTaleSettings.PTC.overWriteXHR = function(xhr){\r\n\tif(XMLHttpRequest != XMLHttpRequest.prototype.constructor){\r\n\t\treturn new XMLHttpRequest.prototype.constructor();\r\n\t}\r\n\telse{\r\n\t\treturn xhr;\r\n\t}\r\n}\r\nwindow.ClickTaleOnXHRCreated = window.ClickTaleSettings.PTC.overWriteXHR;\r\nwindow.CEC = window.CEC || {};\r\nwindow.CEC.onXhrCreated = window.ClickTaleSettings.PTC.overWriteXHR;\t\r\n\r\n\r\n\r\nwindow.ClickTaleSettings.CheckAgentSupport = function(f, v) {\r\n\tif (v.t == v.ED) {\r\n\t\twindow.ClickTaleSettings.Compression.Async = false;\r\n\t}   \r\n\tif(v.m) {\r\n\t\twindow.ClickTaleSettings.PTC.IsMobile = true;\r\n\t\t\/\/webworkers off\r\n\t\t\/\/ ClickTaleSettings.Compression.Async = false; \r\n\t\t\/\/ ClickTaleSettings.Compression.UseDefer = true; \r\n\t\t\/\/ webworkers on\r\n\t\t\/\/ ClickTaleSettings.Compression.Async = true; \r\n\t\t\/\/ ClickTaleSettings.Compression.UseDefer = false; \r\n\t}\t\r\n\t\r\n\tif (!(v.t == v.IE \u0026\u0026 v.v == 10)) {\r\n        window.ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n        window.ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n\t\t\r\n\t}\r\n    var fv = f(v);\r\n    window.ClickTaleSettings.PTC.okToRunPCC = fv;\r\n    return fv;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObj = [{\r\n    selector: \u0027input[type=\\\"text\\\"], input[type=\\\"tel\\\"], input[type=\\\"email\\\"]\u0027,\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n\t},\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n\t}\r\n\t}, {\r\n    selector: \".ctHidden\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n\t},\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n\t}\r\n\t}, {\r\n    selector: \u0027div.universal-nav--right\u003ediv\u003ebutton\u003ediv\u003espan,span#userAccountName,div[id^=currentAddress],span[id^=currentAddress],li[id^=ui-id-],span[id^=shippingSummary],span[id^=billingSummary],p#giftingSummaryMessage,span[id^=billingDisplay],span#completeRegistrationUserName,span#userEmailAddress,div#personalInformation span.linkValue,label[for^=address],span.expiration,span.billingAddress,span.orderNumber,div#billingDetailSection\u003ep,div#shippingDetailSection\u003ep,span.magic-link-confirmation--title-text\u003eb,.cardholder-name,div.addressBlock\u003ediv,div.addressBlock\u003ediv\u003espan\u0027,\/\/GAP-146\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n\t},\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n\t}\r\n\t}, {\r\n    selector: \u0027[is-logged-in=\"isLoggedIn\"] .activeBagContainerTitle, [data-bind*=\"cardPreApprovalCustomerEmailId\"], [data-bind*=\"congratsMessageOnCardConfirm\"], [data-bind*=\"cardNumber\"], [data-bind*=\"PromoCode\"]\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n\t},\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n\t},\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/buy\\\/shopping_bag\\.do\/i\r\n\t}\r\n\t}, {\r\n    selector: \u0027#billingCreditCardId option,.address span,.shippingStateContainer option\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n\t},\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n\t},\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/checkout\\\/order.do\/i\r\n\t}\r\n\t}, {\r\n    selector: \u0027#signInContainer__maskedEmail, .__react_component_tooltip .multi-line, .shipping__display--nameEllipsis,#orderConfirm__greetText\u0027, \r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n\t},\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n\t},\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/checkout\\\/place-order\/i\r\n\t}\r\n\t}, {\r\n    selector: \u0027.inputContainer.body-a_universal\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n\t},\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n\t},\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/profile\\\/forgot_password.do\/i\r\n\t}\r\n\t}, {\r\n    selector: \u0027.accountSettingsSection .linkValue\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n\t},\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n\t},\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/profile\\\/account_summary.do\/i\r\n\t}\r\n\t}, {\r\n    selector: \u0027.email-address-info\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n\t},\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n\t},\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/profile\\\/changePassword.do\/i\r\n\t}\r\n\t}, {\r\n    selector: \".emailAddressLine em,.email-address-info\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n\t},\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n\t}\r\n\t}, {\r\n    selector: \u0027.okta-button-select option\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n\t},\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n\t},\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/profile\\\/forgot_password.do\/i\r\n\t}\r\n}];\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObjRemoveEls = [{\t \r\n\trewriteApiReplace: \u0027#mainNavBROL .g-1-3\u0027\r\n}];\r\n\r\n(function() {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 window.ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelectorAll(window.ClickTalePIISelector);\r\n            if (domNodes) {\r\n                window.ClickTaleSettings.PTC.RulesObj.push({\r\n                    selector: window.ClickTalePIISelector,\r\n                    changeMon: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n\t\t\t\t\t},\r\n                    rewriteApi: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {}\r\n\t}\r\n})();\r\n\r\nwindow.ClickTaleSettings.PTC.AssetManager = {\r\n    isActive: true,\r\n    isNeedForImg: false,\r\n    subscriberId: \u0027233167\u0027,\r\n    pid: \u002717\u0027,\r\n    storageUrl: \u0027https:\/\/s3.amazonaws.com\/nv-p1-s3-assets-01\/\u0027,\r\n    prefixSpecialCharacters: false,\r\n    getPrefixUrl: function() {\r\n        return this.storageUrl + this.subscriberId + \u0027\/\u0027 + this.pid;\r\n\t},\r\n    getFullURL: function(type, url) {\r\n        var AMUrl = \u0027\u0027\r\n        if (url) {\r\n            switch (type) {\r\n                case \u0027css\u0027:\r\n\t\t\t\tAMUrl = this.getPrefixUrl() + \u0027\/CSS\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n\t\t\t\tif (this.prefixSpecialCharacters \u0026\u0026 this.prefixSpecialCharacters.test(AMUrl)) {\r\n\t\t\t\t\tAMUrl = AMUrl.replace(\/\\?\/g, \"%253F\").replace(\/\\\u0026\/g, \"%26\").replace(\/\\=\/g, \"%3D\");\r\n                    } else {\r\n\t\t\t\t\tAMUrl = AMUrl.replace(\/\\?.*\/g, \"\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n                case \u0027image\u0027:\r\n\t\t\t\tAMUrl = this.getPrefixUrl() + \u0027\/IMAGE\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n        return !!AMUrl ? AMUrl : false;\r\n\t},\r\n    makeChanges: function(bodyClone) {\r\n        if (this.pid \u0026\u0026 this.subscriberId) {\r\n            Array.prototype.forEach.call(bodyClone.querySelectorAll(\u0027ctdep-link[href][rel*=\"stylesheet\"]\u0027), function(el, ind) {\r\n                var hrefAttr = el.getAttribute(\u0027href\u0027);\r\n                if (hrefAttr.indexOf(window.ClickTaleSettings.PTC.AssetManager.storageUrl) == -1) {\r\n                    if (hrefAttr.indexOf(\u0027http\u0027) == -1) {\r\n                        var hrefLive = document.querySelector(\u0027link[href=\"\u0027 + hrefAttr + \u0027\"]\u0027);\r\n                        if (hrefLive \u0026\u0026 hrefLive.href) {\r\n                            hrefAttr = hrefLive.href;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                    var finalCssURL = window.ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027css\u0027, hrefAttr);\r\n                    el.setAttribute(\u0027href\u0027, finalCssURL);\r\n\t\t\t\t}\r\n\t\t\t});\r\n            if (this.isNeedForImg) {\r\n                Array.prototype.forEach.call(bodyClone.querySelectorAll(\u0027ctdep-img[src]\u0027), function(el, ind) {\r\n                    var srcAttr = el.getAttribute(\u0027src\u0027);\r\n                    if (srcAttr.indexOf(window.ClickTaleSettings.PTC.AssetManager.storageUrl) == -1) {\r\n                        if (srcAttr.indexOf(\u0027http\u0027) == -1) {\r\n                            var srcLive = document.querySelector(\u0027img[src=\"\u0027 + srcAttr + \u0027\"]\u0027);\r\n                            if (srcLive \u0026\u0026 srcLive.src) {\r\n                                srcAttr = srcLive.src;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n                        var finalImageURL = window.ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027image\u0027, srcAttr);\r\n                        el.setAttribute(\u0027src\u0027, finalImageURL);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.cloneNodeIE9 = function(innerHTML) {\r\n    if (innerHTML instanceof Element) {\r\n        innerHTML = innerHTML.innerHTML;\r\n\t}\r\n\t\r\n    var reg = \/\u003c(area|base|br|col|command|embed|hr|input|keygen|link|menuitem|meta|param|source|track|wbr|img)[^\u003e]*\u003e\/gi;\r\n    var newNode = document.createElement(\u0027div\u0027);\r\n    var docFrag = document.createDocumentFragment();\r\n    docFrag.appendChild(newNode);\r\n    if (document.documentMode) {\r\n        innerHTML = innerHTML\r\n\t\t.replace(\/\\$\/g, \u0027$$$$\u0027)\r\n\t\t.replace(\/(\u003csvg[\\s\\S]+?\u003c\\\/svg\u003e)\/gi, function(m, g1) {\r\n\t\t\tif (g1) {\r\n\t\t\t\treturn \u0027\u003c!--clicktalesvgreplace \u0027 + g1.replace(\/\u003c!--[\\s\\S]+?--\u003e\/g, \u0027\u0027) + \u0027 --\u003e\u0027;\r\n\t\t\t}\r\n\t\t\treturn m;\r\n\t\t});\r\n\t}\r\n    innerHTML = innerHTML\r\n\t.replace(\/\u003cscript\\b([^\u003e]*)\u003e([\\s\\S]*?)\u003c\\\/script\u003e\/gi, \u0027\u003cscript\u003e\u003c\\\/script\u003e\u0027)\r\n\t.replace(\/(\u003cdiv id=\"?ClickTaleDiv\"?[^\u003e]+\u003e)\\s*\u003cscript[^\u003e]+\u003e\u003c\\\/script\u003e\\s*(\u003c\\\/div\u003e)\/i, \u0027$1$2\u0027)\r\n\t.replace(reg, \u0027$\u0026\u003c\\\/$1\u003e\u0027)\r\n\t.replace(\/(\u003c\\\/?)([A-Za-z])\/g, \u0027$1ctdep-$2\u0027)\r\n\t.replace(\/ctdep-style\/gi, \u0027style\u0027);\r\n\t\r\n    newNode.innerHTML = innerHTML;\r\n\t\r\n    return newNode;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.ConfigChangeMonitor = function() {\r\n    if (window.ClickTaleSettings.PTC.EnableChangeMonitor) {\r\n\t\t\r\n        var a = document.createElement(\"script\"),\r\n\t\ts = document.getElementsByTagName(\"script\")[0];\r\n        a.async = true;\r\n        a.crossOrigin = \"anonymous\";\r\n        a.type = \"text\/javascript\";\r\n        a.src = \"https:\/\/cdnssl.clicktale.net\/www\/ChangeMonitor-latest.js\";\r\n        s.parentNode.insertBefore(a, s);\r\n\t\t\r\n        window.ClickTaleSettings.ChangeMonitor = {\r\n            Enable: true,\r\n\t\t\tLiveExclude: true,\r\n            AddressingMode: \"id\",\r\n            OnReadyHandler: function(changeMonitor) {\r\n                changeMonitor.observe();\r\n\t\t\t\tif (typeof window.ClickTaleCMSelector === \u0027string\u0027 \u0026\u0026 window.ClickTaleCMSelector != \u0027\u0027) {\r\n                    changeMonitor.exclude({\r\n                        selector: window.ClickTaleCMSelector,\r\n                        multiple: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n                changeMonitor.exclude(\u0027div.toggle-universal-modal,div#footer-slider,div#carousel_newArrivals_window,#headline_segA,.footer-blue-inner,.product-card-grid\u0027);\r\n\t\t\t\tif(!\/shopping_bag.do\/i.test(location.pathname)){\r\n\t\t\t\t\tchangeMonitor.exclude(\u0027.universal-modal\u0027);\r\n\t\t\t\t}\r\n                changeMonitor.exclude({\r\n\t\t\t\t\tselector: \"script\",\r\n                    multiple: true\r\n\t\t\t\t});\r\n\t\t\t\t\r\n                var CMRemrule = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (CMRemrule) {\r\n                    for (var i = 0; i \u003c CMRemrule.length; i++) {\r\n                        var rule = CMRemrule[i];\r\n                        var CMlocation = rule[\u0027location\u0027];\r\n                        if ((!CMlocation || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) != -1))) {\r\n                            if (rule.changeMon) {\r\n                                changeMonitor.exclude(rule.changeMon);\r\n\t\t\t\t\t\t\t}\r\n                            if (rule.changeMonLive) {\r\n                                changeMonitor.exclude({\r\n                                    selector: rule.changeMonLive,\r\n                                    multiple: true\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n            OnBeforeReadyHandler: function(settings) {\r\n                settings.Enable = window.ClickTaleGetUID ? !!ClickTaleGetUID() : false;\r\n                return settings;\r\n\t\t\t},\r\n            Filters: {\r\n                MaxBufferSize: 1000000,\r\n                MaxElementCount: 25000,\r\n                Before: [function(mutations) {\r\n                    if (typeof ClickTaleSettings.PTC.CMBeforeFilter === \u0027function\u0027) {\r\n                        return ClickTaleSettings.PTC.CMBeforeFilter(mutations);\r\n\t\t\t\t\t}\r\n                    return true;\r\n\t\t\t\t}]\r\n\t\t\t},\r\n            PII: {\r\n                Text: [],\r\n                Attributes: []\r\n\t\t\t}\r\n\t\t}\r\n\t\twindow.ClickTaleSettings.ChangeMonitor.AutoExclude = {\r\n            Enable: true,\r\n            Repeats: 10,\r\n            Interval: 200\r\n\t\t};\r\n\t\t\r\n        var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n        if (RulesObj) {\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Text = window.ClickTaleSettings.ChangeMonitor.PII.Text || [];\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Attributes = window.ClickTaleSettings.ChangeMonitor.PII.Attributes || [];\r\n            for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                var CMrule = RulesObj[i][\u0027changeMon\u0027];\r\n                var CMlocation = RulesObj[i][\u0027location\u0027];\r\n                if (!CMrule || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1)) {\r\n                    continue;\r\n\t\t\t\t}\r\n                var selector = RulesObj[i][\u0027selector\u0027];\r\n                var attributesArr = CMrule.Attributes;\r\n                if (attributesArr instanceof Array) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Attributes.push({\r\n                        selector: selector,\r\n                        transform: (function(attributesArr) {\r\n                            return function(el) {\r\n                                var attrs = el.attributes;\r\n                                var attrsToReturn = {}\r\n                                for (var i = 0; i \u003c attrs.length; i++) {\r\n                                    var name = attrs[i].nodeName;\r\n                                    attrsToReturn[name] = attrs[i].nodeValue;\r\n\t\t\t\t\t\t\t\t}\r\n                                for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                    var attr = attributesArr[u];\r\n                                    var attrib = el.getAttribute(attr);\r\n                                    if (typeof attrib === \u0027string\u0027) {\r\n                                        attrsToReturn[attr] = attrib.replace(\/\\w\/g, \u0027-\u0027);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n                                return attrsToReturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})(attributesArr)\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n                if (CMrule.Text) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Text.push({\r\n                        selector: [selector, function(elements) {\r\n                            var els = Array.prototype.reduce.call(elements, function(curr, add) {\r\n                                return curr.concat(Array.prototype.slice.call(add.childNodes));\r\n\t\t\t\t\t\t\t}, []);\r\n                            return Array.prototype.filter.call(els, function(child) {\r\n                                return !!(child \u0026\u0026 child.nodeType === 3);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}],\r\n                        transform: function(el) {\r\n                            return el.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nwindow.ClickTaleSettings.Compression = {\r\n    Method: function() {\r\n        return \"deflate\";\r\n\t}\r\n};\r\n\r\nwindow.ClickTaleSettings.Transport = {\r\n    Legacy: false,\r\n    MaxConcurrentRequests: 5,\r\n    BigBuffer: 60000,\r\n    SmallBuffer: 1000\r\n};\r\n\r\nwindow.ClickTaleSettings.Performance = {\r\n    Thresholds: {\r\n        RecorderStartToUploadStart: -100,\r\n        Compression: -100,\r\n        ClickTaleStop: -100,\r\n        UploadPage: -100,\r\n        OnBeforeRewrite: -100,\r\n        ResetRecorderState: -100,\r\n        ClearDOMState: -100,\r\n        Events: -100,\r\n        AggregateAndFlush: -100,\r\n        MutationSummary: -100,\r\n        MutationStartToRecorder: -100,\r\n        ChildListMutation: -100,\r\n        AttributesMutation: -100,\r\n        CharacterDataMutation: -100,\r\n        CMRewriteRulesAttributes: -100,\r\n        CMRewriteRulesText: -100\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.RewriteRules = {\r\n    OnBeforeRewrite: function(rewriteApi) {\r\n        if (window.ClickTaleSettings.PTC.RulesObj) {\r\n            rewriteApi.add(function(buffer) {\r\n                var bodyClone = ClickTaleSettings.PTC.cloneNodeIE9(buffer);\r\n\t\t\t\t\r\n                if (window.ClickTaleSettings.PTC.AssetManager \u0026\u0026\r\n\t\t\t\twindow.ClickTaleSettings.PTC.AssetManager.isActive \u0026\u0026\r\n\t\t\t\ttypeof window.ClickTaleSettings.PTC.AssetManager.makeChanges == \u0027function\u0027) {\r\n                    window.ClickTaleSettings.PTC.AssetManager.makeChanges(bodyClone);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n                var selectorReg = \/((?:^|,|\\s|\u003e|\\+|\\~)+)([A-Za-z])\/g;\r\n\t\t\t\t\r\n                var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n                for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                    var rewriteApirule = RulesObj[i][\u0027rewriteApi\u0027];\r\n                    var rewriteApilocation = RulesObj[i][\u0027location\u0027];\r\n                    if (!rewriteApirule || (rewriteApilocation \u0026\u0026 document.location[rewriteApilocation[\u0027prop\u0027]].toLowerCase().search(rewriteApilocation.search) === -1)) {\r\n                        continue;\r\n\t\t\t\t\t}\r\n                    var selector = RulesObj[i][\u0027selector\u0027].replace(selectorReg, \u0027$1ctdep-$2\u0027);\r\n                    var elements = bodyClone.querySelectorAll(selector);\r\n\t\t\t\t\t\r\n                    Array.prototype.forEach.call(elements, function(el, ind) {\r\n                        var attributesArr = rewriteApirule.Attributes;\r\n                        if (attributesArr instanceof Array) {\r\n\t\t\t\t\t\t\t\r\n                            for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                var attr = attributesArr[u];\r\n                                var attrib = el.getAttribute(attr);\r\n                                if (typeof attrib === \u0027string\u0027) {\r\n                                    el.setAttribute(attr, attrib.replace(\/\\w\/g, \u0027-\u0027));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n                        if (rewriteApirule.Text) {\r\n                            var children = el.childNodes;\r\n                            Array.prototype.forEach.call(children, function(child) {\r\n                                if (child \u0026\u0026 child.nodeType === 3) {\r\n                                    child.textContent = child.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n                var RulesObjRemoveEls = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (RulesObjRemoveEls) {\r\n                    for (var i = 0; i \u003c RulesObjRemoveEls.length; i++) {\r\n                        if (RulesObjRemoveEls[i].rewriteApi) {\r\n                            var elementsToRemove = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApi.replace(selectorReg, \u0027$1ctdep-$2\u0027));\r\n                            Array.prototype.forEach.call(elementsToRemove, function(el, ind) {\r\n                                if (el.parentNode) {\r\n                                    el.parentNode.removeChild(el);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n                        if (RulesObjRemoveEls[i].rewriteApiReplace) {\r\n                            var elementsToReplace = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApiReplace.replace(selectorReg, \u0027$1ctdep-$2\u0027));\r\n                            Array.prototype.forEach.call(elementsToReplace, function(el, ind) {\r\n                                if (el.parentNode) {\r\n                                    var comment = document.createComment(el.outerHTML);\r\n                                    el.parentNode.replaceChild(comment, el);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n                var reg = \/\u003e\u003c\\\/(?:area|base|br|col|command|embed|hr|input|keygen|link|menuitem|meta|param|source|track|wbr|img)\u003e\/gi;\r\n                var clone = bodyClone.innerHTML.replace(\/ctdep-\/gi, \u0027\u0027).replace(reg, \u0027 \\\/\u003e\u0027).replace(\/\u003c!--clicktalesvgreplace ([\\s\\S]+?)--\u003e\/, \u0027$1\u0027);\r\n                return clone;\r\n\t\t\t});\r\n\t\t}\r\n        rewriteApi.add({\r\n            pattern: \/(\u003chead[^\u003e]*\u003e)\/i,\r\n            replace: \u0027$1\u003cscript type=\"text\\\/javascript\" class=\"cm-ignore\" src=\"http:\\\/\\\/dummytest.clicktale-samples.com\\\/GlobalResources\\\/jquery.js\"\u003e\u003c\\\/script\u003e\u0027\r\n\t\t});\r\n\t}\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.doOnlyWhen = function(toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if ((!toDoHandler) || (!toCheckHandler)) return;\r\n    if (typeof interval == \"undefined\") interval = 100;\r\n    if (typeof times == \"undefined\") times = 10;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \u0027function\u0027) {\r\n            failHandler();\r\n\t\t}\r\n        return;\r\n\t}\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n\t}\r\n    setTimeout(function() {\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler);\r\n\t}, interval);\r\n};\r\n\r\n\/\/OpinionLab Integration Start\r\nif (window.olData \u0026\u0026 olData[\u0027clickTaleUID\u0027] \u0026\u0026 olData[\u0027clickTaleUID\u0027].length \u003e 1 \u0026\u0026 document.location.host.indexOf(\u0027opinionlab.com\u0027) \u003e -1) { \/\/Cross Domain\r\n    window.ClickTaleCookieDomain = \u0027opinionlab.com\u0027;\r\n    var uid = olData[\u0027clickTaleUID\u0027];\r\n    var expires = \"\";\r\n    var days = 30;\r\n    if (days) {\r\n        var date = new Date();\r\n        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n        expires = date.toUTCString();\r\n\t}\r\n    document.cookie = window.ClickTaleUIDCookieName + \"=\" + uid + \"; expires=\" + expires + \"; domain=.opinionlab.com; path=\/\";\r\n}\r\n\/\/OpinionLab Integration End\r\n\r\nfunction ClickTaleOnRecording() {\r\n\t\r\n    \/\/Clicktale Variables Start\r\n    var intToken = \"5d2d5de3dcb957602ed65e6606fd2f619cfcd96a\";\r\n    var PID = ClickTaleGetPID();\r\n    var UID = ClickTaleGetUID();\r\n    var SID = ClickTaleGetSID();\r\n    var intLink = \"https:\/\/subs.app.clicktale.com\/IntegrationEntry.ashx?Type=Playback\u0026IntegrationToken=\" + intToken + \"\u0026PID=\" + PID + \"\u0026UID=\" + UID + \"\u0026SID=\" + SID;\r\n    \/\/Clicktale Variables End\r\n\t\r\n    \/\/Opinion Lab Integration Start\r\n    if (document.location.host.indexOf(\u0027opinionlab.com\u0027) \u003e -1) {\r\n        ClickTaleEventTrigger(\u0027@ET@ OpinionLab Survey Accepted\u0027);\r\n        ClickTaleStop();\r\n\t}\r\n\t\r\n    if (window.localStorage) {\r\n        if (document.location.host.indexOf(\u0027opinionlab.com\u0027) === -1) {\r\n            var partition = \"www29\";\r\n            var guid = \"c08d3614-4c2f-4b0d-b983-40bd407e56a4\";\r\n            localStorage.setItem(\"CTrecordingLink\", intLink);\r\n            localStorage.setItem(\"CTuserID\", UID);\r\n            localStorage.setItem(\"CTpartition\", partition);\r\n            localStorage.setItem(\"CTguid\", guid);\r\n\t\t}\r\n\t}\r\n    \/\/Opinion Lab Integration End\r\n\t\r\n    \/\/Soasta Integration Start\r\n    function clickTaleSOIntegration() {\r\n        BOOMR.addVar({\r\n            \u0027ct_uid\u0027: UID,\r\n            \u0027ct_lnk\u0027: intLink\r\n\t\t});\r\n        if (typeof BOOMR.session === \"object\") {\r\n            ClickTaleEvent(\"Soasta Session ID: \" + BOOMR.session.ID)\r\n\t\t}\r\n\t};\r\n\t\r\n    function clickTaleCheckIfSOExists() {\r\n        if (window.BOOMR \u0026\u0026 typeof BOOMR === \"object\" \u0026\u0026 typeof BOOMR.addVar === \"function\") {\r\n            return true;\r\n\t\t}\r\n        return false;\r\n\t};\r\n\t\r\n    window.ClickTaleSettings.PTC.doOnlyWhen(clickTaleSOIntegration, clickTaleCheckIfSOExists, 100, 100);\r\n    \/\/Soasta Integration End\r\n}\r\n\r\n\/\/Integrations\r\nif (window.ClickTaleSettings.PTC.Integrations) {\r\n    window.ClickTaleSettings.PTC.Integrations.push(\"Opinion Lab | Core\");\r\n    window.ClickTaleSettings.PTC.Integrations.push(\"Soasta | Core\");\r\n}\r\n\r\n\/\/ -- CT logger config --\n!function () {\r\n    if (typeof ClickTaleClientLogger === \"object\") {\r\n        var samplingRules = createLoggerRules();\n        var loggerReportUrl = \"cts-us.clicktale.net\/log\";\n\n        function createLoggerRules() {\r\n            var pvRule = new ClickTaleClientLogger.PageViewSamplingRule(3, 1, 1, true, 60);\n            return [pvRule];\r\n        }\n        var config = {\r\n            reportUrl: loggerReportUrl,\n            connectionRetries: 10,\n            maxMessageSize: 1000,\n            transportMethod: 2,\n            messageBufferSize: 20,\n            maxUniqueMessages: 5,\n            maxTotalSentMessages: 100,\n            samplingRules: samplingRules\r\n        }\n        var loggerFactory = new ClickTaleClientLogger.LoggerFactory();\n        loggerFactory.addModuleConfig(ClickTaleClientLogger.ClientModule.recorder, config);\r\n        loggerFactory.addModuleConfig(ClickTaleClientLogger.ClientModule.changeMonitor, config);\r\n    } else {\r\n        var loggerFactory = null;\r\n    }\n    window.ClickTaleGlobal = window.ClickTaleGlobal || {};\n    window.ClickTaleGlobal.logger = loggerFactory;\r\n}();\r\n\/\/ -- CT logger config end --\r\n\r\n\/\/ -- CT Load Times --\r\nfunction calculateLoadTimes() {\r\n    logger = ClickTaleGlobal.logger.createLogger(ClickTaleClientLogger.ClientModule.recorder);\r\n    var resources, resource, timing, match, logger, domLoadedTime, ctLoadTimes = {};\r\n    \/\/ Check performance support\r\n    if (performance === undefined) {\r\n        return;\r\n    }\r\n\r\n    \/\/ Get a list of \"resource\" performance entries\r\n    resources = performance.getEntriesByType(\"resource\");\r\n    if (resources === undefined || resources.length \u003c= 0) {\r\n        return;\r\n    }\r\n\r\n    timing = performance.timing;\r\n    ctLoadTimes[\"totalPageLoadTime\"] = precisionRound(timing.loadEventEnd - timing.navigationStart, 3);\r\n\r\n    for (var i = 0; i \u003c resources.length; i++) {\r\n        resource = resources[i];\r\n        match = resource.name.match(\/clicktale\\.net\\\/www\\d*\\\/([^-\\\/\\.]+)\/);\r\n\r\n        if (match \u0026\u0026 resource.initiatorType === \"script\") {\r\n            t = (resource.duration \u003e 0) ? resource.duration : \"0\";\r\n\r\n            if ((match[1] === \"ptc\") \u0026\u0026 resource.fetchStart \u003c (timing.domContentLoadedEventStart - timing.navigationStart)) {\r\n                logger.error(\"11\" \/*PTC Loaded Before Dom Ready*\/, \"PTCBeforeDomReady\");\r\n            }\r\n\r\n            if (match[1].indexOf(\"WR\") === 0) {\r\n                if (match[1].indexOf(\"b\") === match[1].length - 1) {\r\n                    ctLoadTimes[\"WRB\"] = precisionRound(t, 3);\r\n                } else {\r\n                    ctLoadTimes[\"WR\"] = precisionRound(t, 3);\r\n                }\r\n            } else {\r\n                ctLoadTimes[match[1]] = precisionRound(t, 3);\r\n            }\r\n        }\r\n    }\r\n\r\n    logger.info(\"10\" \/*CT load times *\/, ctLoadTimes);\r\n}\r\n\r\nif (ClickTaleClientLogger) {\r\n    window.addEventListener(\"load\", function () {\r\n        setTimeout(function () {\r\n            calculateLoadTimes();\r\n        }, 5000);\r\n    });\r\n}\r\n\r\nfunction precisionRound(number, precision) {\r\n    var factor = Math.pow(10, precision);\n    return Math.round(number * factor) \/ factor;\r\n}\r\n\/\/ -- CT Load Times end --\r\n\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdna.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdna.clicktale.net\/www\/\u0027;\r\n}\r\n\r\nClickTaleGlobal.init.monitorScriptName = \"Monitor-latest.js\";\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 typeof ClickTaleGlobal.init.pmc === \"function\" \u0026\u0026 ClickTaleGlobal.init.pmc(autoMonitorConfig);\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\tvar pccSrc = pccSource ? pccSource + \u0027c08d3614-4c2f-4b0d-b983-40bd407e56a4.js?DeploymentConfigName=metrics_test\u0026Version=174\u0027 : (isHttps ? \u0027https:\/\/cdna.clicktale.net\/www29\/pcc\/c08d3614-4c2f-4b0d-b983-40bd407e56a4.js?DeploymentConfigName=metrics_test\u0026Version=174\u0027 : \u0027http:\/\/cdna.clicktale.net\/www29\/pcc\/c08d3614-4c2f-4b0d-b983-40bd407e56a4.js?DeploymentConfigName=metrics_test\u0026Version=174\u0027);\r\n\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\tpccScriptElement.src = pccSrc;\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\r\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\twindow.ClickTaleGlobal.PCCExists = true;\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=17, \r\n\t\tRatio=1, \r\n\t\tPartitionPrefix=\"www29\",\r\n\t\tSubsId=233167;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\tif (\/search.do\/i.test(location.pathname)) {\r\n\treturn;\r\n}\r\n\r\nif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n}\r\n\r\nwindow.ClickTaleSettings.PTC.InitFuncs = window.ClickTaleSettings.PTC.InitFuncs || [];\r\nwindow.ClickTaleSettings.PTC.InitFuncs.push(function() {\r\n    var pcc = document.querySelector(\u0027script[src*=\"clicktale\"][src*=\"pcc\"]\u0027);\r\n    if (pcc) {\r\n        var versionmatch = pcc.src.match(\/DeploymentConfigName=(.+)\/i);\r\n        if (versionmatch \u0026\u0026 typeof ClickTaleExec === \u0027function\u0027) {\r\n            ClickTaleExec(\"console.info(\u0027\" + versionmatch[0] + \"\u0027);\");\r\n            ClickTaleEvent(\"Config: \" + versionmatch[1].replace(\/\\\u0026.+\/, \u0027\u0027));\r\n\t\t}\r\n\t}\r\n});\r\n\r\nfunction isOpacity(element) {\r\n    if (typeof element === \u0027string\u0027 \u0026\u0026 (element = document.querySelector(element)) \u0026\u0026 element.offsetHeight \u003e 0 \u0026\u0026 element.offsetWidth \u003e 0 \u0026\u0026 element.style.opacity === \u00271\u0027) {\r\n        return true;\r\n\t\t} else {\r\n        return false;\r\n\t}\r\n}\r\n\r\nfunction isVisible(element) {\r\n\tif(element \u0026\u0026 typeof element == \u0027string\u0027){\t\r\n\t\telement = document.querySelectorAll(element);\r\n\t}\r\n\tif (element instanceof NodeList \u0026\u0026 element.length \u003e 0) {\r\n\t\treturn Array.prototype.filter.call(element,function(el){\r\n\t\t\treturn isVisible(el);\r\n\t\t}).length == element.length;\r\n\t}\r\n\tif(element instanceof Element) {\r\n\t\treturn !!(element \u0026\u0026 !!(element.compareDocumentPosition(document) \u0026 Node.DOCUMENT_POSITION_CONTAINS) \u0026\u0026 ((element.offsetWidth \u003e 0 \u0026\u0026 element.offsetHeight \u003e 0) || element[\u0027getClientRects\u0027]().length \u003e 0));\r\n\t}\r\n\treturn false;\r\n}  \r\n\r\n\r\nfunction doUpload() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        ClickTaleUploadPageNow();\r\n        window.ClickTaleSettings.PTC.UploadPageHappened = true;\r\n        window.ClickTaleSettings.PTC.UploadPageTime = Date.now();\r\n\t};\r\n};\r\n\r\n\r\nfunction isReadyToRecord() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        \/\/GAP-189\r\n\t\tif (\/\\\/checkout\\\/(?:search|category).do\/i.test(document.location.href)) {\r\n\t\t\treturn !!document.querySelector(\u0027div.favorites\u0027);\r\n\t\t}\r\n\t\t\r\n\t\t\/\/GAP-9\r\n        else if (document.location.href.indexOf(\u0027\/checkout\/order.do\u0027) \u003e -1) {\r\n            return isOpacity(\u0027#signInInput\u0027) || isOpacity(\u0027#shippingInput\u0027) || isOpacity(\u0027#giftingInput\u0027) || isOpacity(\u0027#billingInput\u0027) || isOpacity(\u0027#orderPlacementInput\u0027) || isVisible(\u0027#requestTimeOutPanel\u0027) || isVisible(\u0027#sessionTimeOutPanel\u0027);\r\n\t\t} \r\n\t\telse if (location.pathname.toLowerCase().indexOf(\u0027\/buy\/shopping_bag.do\u0027) \u003e -1) {\r\n            return document.querySelectorAll(\u0027.shoppingBagCheckout\u0027).length \u003e 0 \u0026\u0026 document.querySelectorAll(\u0027.productDetails\u0027).length \u003e 0;\r\n\t\t}\r\n\t\telse if (location.pathname.toLowerCase() === \u0027\/checkout\/place-order\/\u0027) {\r\n            return !(document.querySelector(\u0027.processing__circle\u0027));\r\n\t\t}\t\r\n\t\telse {\r\n            return true;\r\n\t\t}\r\n\t}\r\n    return false;\r\n};\r\n\r\nfunction startRecordingChecks() {\r\n\tif (\/\\\/bright\\\/\/i.test(location.pathname) \u0026\u0026 top != self) {\r\n\t\tif(window.innerWidth == 0 \u0026\u0026 window.innerHeight == 0){\r\n\t\t\tsetTimeout(startRecordingChecks, 500);\r\n\t\t\treturn;\t\t\t\r\n\t\t}\t\t\r\n\t}\r\n\t\r\n    if (typeof ClickTaleDelayUploadPage === \u0027function\u0027) {\r\n        ClickTaleDelayUploadPage();\r\n\t\t\r\n        \/\/var PWADelay = \/pwa=true\/i.test(location.search) ? 5000 : 0;\r\n        var intervals = (document.location.href.indexOf(\u0027\/checkout\/order.do\u0027) \u003e -1) ? 5 : 10;\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 1000, intervals, doUpload);\r\n\t\t\r\n        var initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\n        for (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n            if (typeof initFuncs[i] === \u0027function\u0027) {\r\n                initFuncs[i]();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n    \r\n    window.ClickTaleIncludedOnDOMReady = true;\r\n\twindow.ClickTaleIncludedOnWindowLoad = true;\r\n\t\r\n    ClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n    if ((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString())) {\r\n        ClickTalePrevOnReady();\r\n\t}\r\n}\r\n\r\nif (document.readyState = \u0027complete\u0027) {\r\n    setTimeout(startRecordingChecks, 1000);\r\n}\r\nelse {\r\n    window.addEventListener(\u0027load\u0027, function () {\r\n        setTimeout(startRecordingChecks, 1000);\r\n\t});\r\n}\r\n\r\n\/\/don\u0027t continue with regular recording\r\nreturn;\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\t\r\n\twrScript.src = window.ClickTaleScriptSource + \u0027WR1010.js\u0027;\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",n,!1)}catch(e){}function n(e){var t,n;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(!function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=o(\"script\");e.setAttribute(\"type\",\"application\/javascript\"),e.setAttribute(\"id\",\"ctTestRulesModule\"),e.onload=function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")};var t=ClickTaleGetPID();e.src=ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+t,document.getElementById(\"ctTestRulesModule\")||document.body.appendChild(e)}(),(n=o(\"script\")).setAttribute(\"type\",\"text\/javascript\"),n.setAttribute(\"id\",\"ctVisualEditorClientModule\"),n.src=ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\",document.getElementById(\"ctVisualEditorClientModule\")||document.body.appendChild(n)))}function o(e){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",e):document.createElement(e)}}();");
				document.body.appendChild(script);
			})();
	}		
if (ct_dispatcher.configName == 'Release_20180827')
{
	ClickTaleGlobal.init.configFoundPTC = true;
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2018 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 17\r\n\/\/ WR destination: www29\r\n\/\/ WR version: latest\r\n\/\/ Recording ratio: 1\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\nvar ctVEconfig ={\"VE_BASE_URL\":\"https:\/\/ve-cec-na1.app.clicktale.com\/\"};\r\n\r\nwindow.ClickTaleGlobal.VisualEditorDesignerExists = !!72;\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\r\n{\r\n\tClickTaleCreateDOMElement = function(tagName)\r\n\t{\r\n\t\tif (document.createElementNS)\r\n\t\t{\r\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\r\n\t\t}\r\n\t\treturn document.createElement(tagName);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleAppendInHead) != \"function\")\r\n{\r\n\tClickTaleAppendInHead = function(element)\r\n\t{\r\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\r\n\t\tparent.appendChild(element);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\r\n{\r\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\r\n\t{\r\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\r\n\t\tscript.text = code;\r\n\t\treturn script;\r\n\t}\r\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\nwindow.CTPauseResume = function(pause) {\r\n    if (typeof clickTaleStartEventSignal === \u0027undefined\u0027)\r\n        return;\r\n\r\n    if (pause \u0026\u0026 typeof ClickTaleIsRecording === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording() \u0026\u0026 typeof ClickTaleGlobal === \u0027object\u0027 \u0026\u0026 typeof ClickTaleGlobal.exports.changeMonitor === \u0027object\u0027 \u0026\u0026 typeof ClickTaleGlobal.exports.changeMonitor.disconnect === \u0027function\u0027) {\r\n        ClickTaleGlobal.exports.changeMonitor.disconnect();\r\n        window.ctStop = Date.now();\r\n    }\r\n    if (!pause \u0026\u0026 typeof ClickTaleIsRecording === \u0027function\u0027) {\r\n        interval = (Date.now() - window.ctStop) \/ 1000;\r\n        var evtStr = (interval \u003e 0 \u0026\u0026 interval \u003c 8) ? \"Onload | Resume \" + Math.round(interval) + \" sec\" : \"Onload | Paginate\";\r\n        clickTaleStartEventSignal(evtStr);\r\n        window.ctStop = Date.now();\r\n    }\r\n}\r\n\r\n\/\/CEC monitor\r\nif (window.ClickTaleMonitor \u0026\u0026 window.ClickTaleMonitor.Settings) {\r\n    var settings = ClickTaleMonitor.Settings.get();\r\n    settings.shouldStartMonitor(function() {\r\n        return (\/(?:oldnavy|bananarepublic)\/i.test(location.hostname));\r\n    });\r\n}\r\n\r\n\/\/PTC Code Version 9.15\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSettings.Compression = window.ClickTaleSettings.Compression || {};\r\nif (document.readyState === \u0027complete\u0027) {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UploadPageHappened = false;\r\nwindow.ClickTaleSettings.PTC.IsMobile = false;\r\nwindow.ClickTaleSettings.PTC.textRegex = \/\\w|[^\\x00-\\x7F]\/g;\r\n\r\nwindow.ClickTaleUIDCookieName = \u0027WRUID20171123\u0027;\r\n\r\nfunction clickTaleReadCookie(name) {\r\n    var nameEQ = name + \"=\";\r\n    var ca = document.cookie.split(\u0027;\u0027);\r\n    for (var i = 0; i \u003c ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == \u0027 \u0027)\r\n            c = c.substring(1, c.length);\r\n        if (c.indexOf(nameEQ) == 0)\r\n            return c.substring(nameEQ.length, c.length);\r\n    }\r\n    return null;\r\n};\r\n\r\nif (clickTaleReadCookie(window.ClickTaleUIDCookieName) === \"\") {\r\n    document.cookie = window.ClickTaleUIDCookieName + \"=\u0027\u0027;domain=secure-www.gap.com;path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;\";\r\n}\r\n\r\nif (!!navigator.userAgent.match(\/Version\\\/[\\d\\.]+.*Safari\/)) {\r\n    ClickTaleSettings.Protocol.UseBeacon = false;\r\n    if (!!navigator \u0026\u0026 typeof navigator.sendBeacon === \u0027function\u0027) {\r\n        navigator.oldsendBeacon = navigator.sendBeacon;\r\n        navigator.sendBeacon = function(url) {\r\n            if (\/.clicktale.net\/.test(url)) {\r\n                setTimeout(function() {\r\n                    var img = new Image();\r\n                    img.src = url;\r\n                }, 0);\r\n                return;\r\n            }\r\n            return navigator.oldsendBeacon.apply(this, arguments)\r\n        }\r\n    }\r\n}\r\n\r\n\/\/GAP-220\r\nwindow.ClickTaleSettings.PTC.overWriteXHR = function(xhr) {\r\n    if (XMLHttpRequest != XMLHttpRequest.prototype.constructor) {\r\n        return new XMLHttpRequest.prototype.constructor();\r\n    } else {\r\n        return xhr;\r\n    }\r\n}\r\nwindow.ClickTaleOnXHRCreated = window.ClickTaleSettings.PTC.overWriteXHR;\r\nwindow.CEC = window.CEC || {};\r\nwindow.CEC.onXhrCreated = window.ClickTaleSettings.PTC.overWriteXHR;\r\nvar isSafariV10 = false;\r\n\r\nwindow.ClickTaleSettings.CheckAgentSupport = function(f, v) {\r\n    if (v.t == v.Sa \u0026\u0026 v.v \u003c 11) {\r\n        isSafariV10 = true;\r\n    }\r\n    if (v.t == v.ED \u0026\u0026 v.v \u003c 14) {\r\n        window.ClickTaleSettings.Compression.Async = false;\r\n    }\r\n    if (v.m) {\r\n        window.ClickTaleSettings.PTC.IsMobile = true;\r\n        \/\/webworkers off\r\n        \/\/ ClickTaleSettings.Compression.Async = false;\r\n        \/\/ ClickTaleSettings.Compression.UseDefer = true;\r\n        \/\/ webworkers on\r\n        \/\/ ClickTaleSettings.Compression.Async = true;\r\n        \/\/ ClickTaleSettings.Compression.UseDefer = false;\r\n    }\r\n\r\n    if (!(v.t == v.IE \u0026\u0026 v.v == 10)) {\r\n        window.ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n        window.ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n\r\n    }\r\n    var fv = f(v);\r\n    window.ClickTaleSettings.PTC.okToRunPCC = fv;\r\n    return fv;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.startsWith = function(strToTest, str) {\r\n    return strToTest.lastIndexOf(str, 0) === 0;\r\n};\r\nwindow.ClickTaleSettings.PTC.RulesObj = [{\r\n    selector: \"input[type=\\\"text\\\"], input[type=\\\"tel\\\"], input[type=\\\"email\\\"], input[type=\\\"password\\\"], input[type=\\\"hidden\\\"]\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    }\r\n}, {\r\n    selector: \".ctHidden\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}, {\r\n    selector: \u0027div.universal-nav--right\u003ediv\u003ebutton\u003ediv\u003espan, span#userAccountName, div[id^=currentAddress], span[id^=currentAddress], li[id^=ui-id-], span[id^=shippingSummary], span[id^=billingSummary], p#giftingSummaryMessage, span[id^=billingDisplay], span#completeRegistrationUserName, span#userEmailAddress, div#personalInformation span.linkValue, label[for^=address], span.expiration, span.billingAddress, span.orderNumber, div#billingDetailSection\u003ep, div#shippingDetailSection\u003ep, span.magic-link-confirmation--title-text\u003eb, .cardholder-name, div.addressBlock\u003ediv, div.addressBlock\u003ediv\u003espan\u0027, \/\/GAP-146\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    }\r\n}, {\r\n    selector: \u0027#emailAddressBlock\u003e.displayEmail\u0027, \/\/GAP-414\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    }\r\n}, {\r\n    selector: \u0027[is-logged-in=\"isLoggedIn\"] .activeBagContainerTitle, [data-bind*=\"cardPreApprovalCustomerEmailId\"], [data-bind*=\"congratsMessageOnCardConfirm\"], [data-bind*=\"cardNumber\"], [data-bind*=\"PromoCode\"]\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/buy\\\/shopping_bag\\.do\/i\r\n    }\r\n}, {\r\n    selector: \u0027#billingCreditCardId option, .address span, .shippingStateContainer option\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/checkout\\\/order.do\/i\r\n    }\r\n}, {\r\n    selector: \u0027#signInContainer__maskedEmail, .__react_component_tooltip .multi-line, .__react_component_tooltip span, .shipping__display--nameEllipsis, #orderConfirm__greetText\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/checkout\\\/place-order\/i\r\n    }\r\n}, {\r\n    selector: \u0027.inputContainer.body-a_universal\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/profile\\\/forgot_password.do\/i\r\n    }\r\n}, {\r\n    selector: \u0027.accountSettingsSection .linkValue\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/profile\\\/account_summary.do\/i\r\n    }\r\n}, {\r\n    selector: \u0027.email-address-info\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/profile\\\/changePassword.do\/i\r\n    }\r\n}, {\r\n    selector: \".emailAddressLine em, .email-address-info\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}, {\r\n    selector: \u0027.okta-button-select option\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/profile\\\/forgot_password.do\/i\r\n    }\r\n}, {\r\n    selector: \u0027.acceptance-container span\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/credit-card-accept\\\/\/i\r\n    }\r\n}, {\r\n    selector: \u0027#birthday, #annualNetIncome\u0027,\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/credit-card-accept\\\/\/i\r\n    }\r\n}];\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObjRemoveEls = [{\r\n    rewriteApiReplace: \u0027#mainNavBROL .g-1-3\u0027\r\n}];\r\n\r\n(function() {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 window.ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelector(window.ClickTalePIISelector);\r\n\r\n            window.ClickTaleSettings.PTC.RulesObj.push({\r\n                selector: window.ClickTalePIISelector,\r\n                changeMon: {\r\n                    Attributes: [\u0027value\u0027],\r\n                    Text: true\r\n                },\r\n                rewriteApi: {\r\n                    Attributes: [\u0027value\u0027],\r\n                    Text: true\r\n                }\r\n            });\r\n\r\n        } catch (err) {}\r\n    }\r\n})();\r\n\r\nwindow.ClickTaleSettings.PTC.AssetManager = {\r\n    isActive: true,\r\n    isNeedForImg: false,\r\n    subscriberId: \u0027233167\u0027,\r\n    pid: \u002717\u0027,\r\n    storageUrl: \u0027https:\/\/s3.amazonaws.com\/nv-p1-s3-assets-01\/\u0027,\r\n    prefixSpecialCharacters: false,\r\n    getPrefixUrl: function() {\r\n        return this.storageUrl + this.subscriberId + \u0027\/\u0027 + this.pid;\r\n    },\r\n    getFullURL: function(type, url) {\r\n        var AMUrl = \u0027\u0027\r\n        if (url) {\r\n            switch (type) {\r\n                case \u0027css\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/CSS\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    if (this.prefixSpecialCharacters \u0026\u0026 this.prefixSpecialCharacters.test(AMUrl)) {\r\n                        AMUrl = AMUrl.replace(\/\\?\/g, \"%253F\").replace(\/\\\u0026\/g, \"%26\").replace(\/\\=\/g, \"%3D\");\r\n                    } else {\r\n                        AMUrl = AMUrl.replace(\/\\?.*\/g, \"\");\r\n                    }\r\n                    break;\r\n                case \u0027image\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/IMAGE\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    break;\r\n            }\r\n\r\n        }\r\n        return !!AMUrl ? AMUrl : false;\r\n    },\r\n    makeChanges: function(bodyClone) {\r\n        if (this.pid \u0026\u0026 this.subscriberId) {\r\n            Array.prototype.forEach.call(bodyClone.querySelectorAll(\u0027ctdep-link[href][rel*=\"stylesheet\"]\u0027), function(el, ind) {\r\n                var hrefAttr = el.getAttribute(\u0027href\u0027);\r\n                if (hrefAttr.indexOf(window.ClickTaleSettings.PTC.AssetManager.storageUrl) == -1 \u0026\u0026 hrefAttr.indexOf(\u0027fonts.googleapis.com\u0027) == -1) {\r\n                    if (hrefAttr.indexOf(\u0027http\u0027) == -1) {\r\n                        var hrefLive = document.querySelector(\u0027link[href=\"\u0027 + hrefAttr + \u0027\"]\u0027);\r\n                        if (hrefLive \u0026\u0026 hrefLive.href) {\r\n                            hrefAttr = hrefLive.href;\r\n                        }\r\n                    }\r\n                    var finalCssURL = window.ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027css\u0027, hrefAttr);\r\n                    el.setAttribute(\u0027href\u0027, finalCssURL);\r\n                }\r\n            });\r\n            if (this.isNeedForImg) {\r\n                Array.prototype.forEach.call(bodyClone.querySelectorAll(\u0027ctdep-img[src]\u0027), function(el, ind) {\r\n                    var srcAttr = el.getAttribute(\u0027src\u0027);\r\n                    if (srcAttr.indexOf(window.ClickTaleSettings.PTC.AssetManager.storageUrl) == -1) {\r\n                        if (srcAttr.indexOf(\u0027http\u0027) == -1) {\r\n                            var srcLive = document.querySelector(\u0027img[src=\"\u0027 + srcAttr + \u0027\"]\u0027);\r\n                            if (srcLive \u0026\u0026 srcLive.src) {\r\n                                srcAttr = srcLive.src;\r\n                            }\r\n                        }\r\n                        var finalImageURL = window.ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027image\u0027, srcAttr);\r\n                        el.setAttribute(\u0027src\u0027, finalImageURL);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.cloneNodeIE9 = function(innerHTML) {\r\n    if (innerHTML instanceof Element) {\r\n        innerHTML = innerHTML.innerHTML;\r\n    }\r\n\r\n    var reg = \/\u003c(area|base|br|col|command|embed|hr|input|keygen|link|menuitem|meta|param|source|track|wbr|img)[^\u003e]*\u003e\/gi;\r\n    var newNode = document.createElement(\u0027temp-div\u0027);\r\n    var docFrag = document.createDocumentFragment();\r\n    docFrag.appendChild(newNode);\r\n    if (document.documentMode) {\r\n        innerHTML = innerHTML\r\n            .replace(\/(\u003csvg[\\s\\S]+?\u003c\\\/svg\u003e)\/gi, function(m, g1) {\r\n                if (g1) {\r\n                    return \u0027\u003c!--clicktalesvgreplace \u0027 + g1.replace(\/\u003c!--[\\s\\S]+?--\u003e\/g, \u0027\u0027) + \u0027 --\u003e\u0027;\r\n                }\r\n                return m;\r\n            });\r\n    }\r\n    innerHTML = innerHTML\r\n        .replace(\/\u003cscript\\b([^\u003e]*)\u003e([\\s\\S]*?)\u003c\\\/script\u003e\/gi, \u0027\u003cscript\u003e\u003c\\\/script\u003e\u0027)\r\n        .replace(\/(\u003cdiv id=\"?ClickTaleDiv\"?[^\u003e]+\u003e)\\s*\u003cscript[^\u003e]+\u003e\u003c\\\/script\u003e\\s*(\u003c\\\/div\u003e)\/i, \u0027$1$2\u0027)\r\n        .replace(reg, function(m, g1) {\r\n            if (g1) {\r\n                var checkReg = new RegExp(\u0027\u003c\u0027 + g1 + \u0027[^\\\\w]\u0027);\r\n                if (checkReg.test(m)) {\r\n                    return m + \u0027\u003c\\\/\u0027 + g1 + \u0027\u003e\u0027;\r\n                }\r\n            }\r\n            return m\r\n        })\r\n        .replace(\/(\u003c\\\/?)([A-Za-z])\/g, \u0027$1ctdep-$2\u0027)\r\n        .replace(\/ctdep-style\/gi, \u0027style\u0027);\r\n\r\n    newNode.innerHTML = innerHTML;\r\n\r\n    return newNode;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.ConfigChangeMonitor = function() {\r\n    if (window.ClickTaleSettings.PTC.EnableChangeMonitor) {\r\n\r\n        var a = document.createElement(\"script\"),\r\n            s = document.getElementsByTagName(\"script\")[0];\r\n        a.async = true;\r\n        a.crossOrigin = \"anonymous\";\r\n        a.type = \"text\/javascript\";\r\n        a.src = \"https:\/\/cdnssl.clicktale.net\/www\/ChangeMonitor-latest.js\";\r\n        s.parentNode.insertBefore(a, s);\r\n\r\n        window.ClickTaleSettings.ChangeMonitor = {\r\n            Enable: true,\r\n            LiveExclude: true,\r\n            AddressingMode: \"id\",\r\n            OnReadyHandler: function(changeMonitor) {\r\n                changeMonitor.observe();\r\n                if (typeof window.ClickTaleCMSelector === \u0027string\u0027 \u0026\u0026 window.ClickTaleCMSelector != \u0027\u0027) {\r\n                    changeMonitor.exclude({\r\n                        selector: window.ClickTaleCMSelector,\r\n                        multiple: true\r\n                    });\r\n                }\r\n                changeMonitor.exclude({\r\n                    selector: \u0027div.toggle-universal-modal, div#footer-slider, div#carousel_newArrivals_window, #headline_segA, .footer-blue-inner, script\u0027,\r\n                    multiple: true\r\n                });\r\n                if (!\/(?:shopping_bag|category|product).do\/i.test(location.pathname)) {\r\n                    changeMonitor.exclude({\r\n                        selector: \u0027.universal-modal\u0027,\r\n                        multiple: true\r\n                    });\r\n                }\r\n\r\n                var CMRemrule = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (CMRemrule) {\r\n                    for (var i = 0; i \u003c CMRemrule.length; i++) {\r\n                        var rule = CMRemrule[i];\r\n                        var CMlocation = rule[\u0027location\u0027];\r\n                        if ((!CMlocation || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) != -1))) {\r\n                            if (rule.changeMon) {\r\n                                changeMonitor.exclude(rule.changeMon);\r\n                            }\r\n                            if (rule.changeMonLive) {\r\n                                changeMonitor.exclude({\r\n                                    selector: rule.changeMonLive,\r\n                                    multiple: true\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            OnBeforeReadyHandler: function(settings) {\r\n                settings.Enable = window.ClickTaleGetUID ? !!ClickTaleGetUID() : false;\r\n                return settings;\r\n            },\r\n            Filters: {\r\n                MaxBufferSize: 1000000,\r\n                MaxElementCount: 25000,\r\n                Before: [function(mutations) {\r\n                    if (typeof ClickTaleSettings.PTC.CMBeforeFilter === \u0027function\u0027) {\r\n                        return ClickTaleSettings.PTC.CMBeforeFilter(mutations);\r\n                    }\r\n                    return true;\r\n                }]\r\n            },\r\n            PII: {\r\n                Text: [],\r\n                Attributes: []\r\n            }\r\n        }\r\n        if (document.location.pathname.toLocaleLowerCase().indexOf(\"\/buy\/shopping_bag.do\") \u003e -1) {\r\n            window.ClickTaleSettings.ChangeMonitor.AutoExclude = {\r\n                Enable: false,\r\n                Repeats: 10,\r\n                Interval: 200\r\n            };\r\n        } else if (!!document.querySelector(\u0027#topNav\u0027)) {\r\n            window.ClickTaleSettings.ChangeMonitor.AutoExclude = {\r\n                Enable: false,\r\n                Repeats: 10,\r\n                Interval: 300\r\n            };\r\n        } else {\r\n            window.ClickTaleSettings.ChangeMonitor.AutoExclude = {\r\n                Enable: true,\r\n                Repeats: 10,\r\n                Interval: 200\r\n            };\r\n        }\r\n\r\n        var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n        if (RulesObj) {\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Text = window.ClickTaleSettings.ChangeMonitor.PII.Text || [];\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Attributes = window.ClickTaleSettings.ChangeMonitor.PII.Attributes || [];\r\n            for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                var CMrule = RulesObj[i][\u0027changeMon\u0027];\r\n                var CMlocation = RulesObj[i][\u0027location\u0027];\r\n                if (!CMrule || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1)) {\r\n                    continue;\r\n                }\r\n                var selector = RulesObj[i][\u0027selector\u0027];\r\n                var attributesArr = CMrule.Attributes;\r\n                if (attributesArr instanceof Array) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Attributes.push({\r\n                        selector: selector,\r\n                        transform: (function(attributesArr) {\r\n                            return function(el) {\r\n                                var attrs = el.attributes;\r\n                                var attrsToReturn = {}\r\n                                for (var i = 0; i \u003c attrs.length; i++) {\r\n                                    var name = attrs[i].nodeName;\r\n                                    attrsToReturn[name] = attrs[i].nodeValue;\r\n                                }\r\n                                for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                    var attr = attributesArr[u];\r\n                                    var attrib = el.getAttribute(attr);\r\n                                    if (typeof attrib === \u0027string\u0027) {\r\n                                        attrsToReturn[attr] = attrib.replace(window.ClickTaleSettings.PTC.textRegex, \u0027-\u0027);\r\n                                    }\r\n                                }\r\n\r\n                                return attrsToReturn;\r\n                            }\r\n                        })(attributesArr)\r\n                    });\r\n                }\r\n                if (CMrule.Text) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Text.push({\r\n                        selector: [selector, function(elements) {\r\n                            var els = Array.prototype.reduce.call(elements, function(curr, add) {\r\n                                return curr.concat(Array.prototype.slice.call(add.childNodes));\r\n                            }, []);\r\n                            return Array.prototype.filter.call(els, function(child) {\r\n                                return !!(child \u0026\u0026 child.nodeType === 3);\r\n                            });\r\n                        }],\r\n                        transform: function(el) {\r\n                            return el.textContent.replace(window.ClickTaleSettings.PTC.textRegex, \u0027-\u0027);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Compression = {\r\n    Method: function() {\r\n        return \"deflate\";\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Transport = {\r\n    Legacy: false,\r\n    MaxConcurrentRequests: 5,\r\n    BigBuffer: 60000,\r\n    SmallBuffer: 1000\r\n};\r\n\r\nwindow.ClickTaleSettings.RewriteRules = {\r\n    OnBeforeRewrite: function(rewriteApi) {\r\n        if (window.ClickTaleSettings.PTC.RulesObj) {\r\n            rewriteApi.add(function(buffer) {\r\n                var bodyClone = ClickTaleSettings.PTC.cloneNodeIE9(buffer);\r\n\r\n                if (window.ClickTaleSettings.PTC.AssetManager \u0026\u0026\r\n                    window.ClickTaleSettings.PTC.AssetManager.isActive \u0026\u0026\r\n                    typeof window.ClickTaleSettings.PTC.AssetManager.makeChanges == \u0027function\u0027) {\r\n                    window.ClickTaleSettings.PTC.AssetManager.makeChanges(bodyClone);\r\n                }\r\n\r\n                var selectorReg = \/((?:^|,|\\s|\u003e|\\+|\\~)+)([A-Za-z])\/g;\r\n\r\n                var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n                for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                    var rewriteApirule = RulesObj[i][\u0027rewriteApi\u0027];\r\n                    var rewriteApilocation = RulesObj[i][\u0027location\u0027];\r\n                    if (!rewriteApirule || (rewriteApilocation \u0026\u0026 document.location[rewriteApilocation[\u0027prop\u0027]].toLowerCase().search(rewriteApilocation.search) === -1)) {\r\n                        continue;\r\n                    }\r\n                    var selector = RulesObj[i][\u0027selector\u0027].replace(selectorReg, \u0027$1ctdep-$2\u0027);\r\n                    var elements = bodyClone.querySelectorAll(selector);\r\n\r\n                    Array.prototype.forEach.call(elements, function(el, ind) {\r\n                        var attributesArr = rewriteApirule.Attributes;\r\n                        if (attributesArr instanceof Array) {\r\n\r\n                            for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                var attr = attributesArr[u];\r\n                                var attrib = el.getAttribute(attr);\r\n                                if (typeof attrib === \u0027string\u0027) {\r\n                                    el.setAttribute(attr, attrib.replace(window.ClickTaleSettings.PTC.textRegex, \u0027-\u0027));\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        if (rewriteApirule.Text) {\r\n                            var children = el.childNodes;\r\n                            Array.prototype.forEach.call(children, function(child) {\r\n                                if (child \u0026\u0026 child.nodeType === 3) {\r\n                                    child.textContent = child.textContent.replace(window.ClickTaleSettings.PTC.textRegex, \u0027-\u0027);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                var RulesObjRemoveEls = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (RulesObjRemoveEls) {\r\n                    for (var i = 0; i \u003c RulesObjRemoveEls.length; i++) {\r\n                        if (RulesObjRemoveEls[i].rewriteApi) {\r\n                            var elementsToRemove = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApi.replace(selectorReg, \u0027$1ctdep-$2\u0027));\r\n                            Array.prototype.forEach.call(elementsToRemove, function(el, ind) {\r\n                                if (el.parentNode) {\r\n                                    el.parentNode.removeChild(el);\r\n                                }\r\n                            });\r\n                        }\r\n                        if (RulesObjRemoveEls[i].rewriteApiReplace) {\r\n                            var elementsToReplace = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApiReplace.replace(selectorReg, \u0027$1ctdep-$2\u0027));\r\n                            Array.prototype.forEach.call(elementsToReplace, function(el, ind) {\r\n                                if (el.parentNode) {\r\n                                    var comment = document.createComment(el.outerHTML);\r\n                                    el.parentNode.replaceChild(comment, el);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var reg = \/\u003e\u003c\\\/(?:area|base|br|col|command|embed|hr|input|keygen|link|menuitem|meta|param|source|track|wbr|img)\u003e\/gi;\r\n                var clone = bodyClone.innerHTML.replace(\/ctdep-\/gi, \u0027\u0027).replace(reg, \u0027 \\\/\u003e\u0027).replace(\/\u003c!--clicktalesvgreplace ([\\s\\S]+?)--\u003e\/g, \u0027$1\u0027);\r\n                return clone;\r\n            });\r\n        }\r\n        rewriteApi.add({\r\n            pattern: \/(\u003chead[^\u003e]*\u003e)\/i,\r\n            replace: \u0027$1\u003cscript type=\"text\\\/javascript\" class=\"cm-ignore\" src=\"https:\\\/\\\/cdnssl.clicktale.net\\\/www\\\/tc\\\/jquery.min.js\"\u003e\u003c\\\/script\u003e\u0027\r\n        });\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.doOnlyWhen = function(toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if ((!toDoHandler) || (!toCheckHandler))\r\n        return;\r\n    if (typeof interval == \"undefined\")\r\n        interval = 100;\r\n    if (typeof times == \"undefined\")\r\n        times = 10;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \u0027function\u0027) {\r\n            failHandler();\r\n        }\r\n        return;\r\n    }\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n    }\r\n    setTimeout(function() {\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler);\r\n    }, interval);\r\n};\r\n\r\n\/\/Medallia Integration Start\r\nfunction clickTaleMedalliaIntegration() {\r\n    window.addEventListener(\u0027MDigital_Submit_Feedback\u0027, function(event) {\r\n        if (window.ClickTaleIsRecording \u0026\u0026 ClickTaleIsRecording()) {\r\n            ClickTaleEventTrigger(\"@ET@ Medallia Survey Submitted\");\r\n            if (event \u0026\u0026 event.detail) {\r\n                if (event.detail.Feedback_UUID \u0026\u0026 event.detail.Form_ID \u0026\u0026 event.detail.Form_Type) {\r\n                    ClickTaleEvent(\"Medallia Feedback UUID: \" + event.detail.Feedback_UUID);\r\n                    ClickTaleEvent(\"Medallia Form ID: \" + event.detail.Form_ID);\r\n                    ClickTaleEvent(\"Medallia Form Type: \" + event.detail.Form_Type);\r\n                }\r\n                if (event.detail.Content \u0026\u0026 event.detail.Content.length \u003e 0) {\r\n                    for (var i = 0; i \u003c event.detail.Content.length; i++) {\r\n                        if (event.detail.Content[i].type.toLowerCase().indexOf(\"grading\") \u003e -1 ||\r\n                            event.detail.Content[i].type.toLowerCase().indexOf(\"nps\") \u003e -1) {\r\n                            var rating = event.detail.Content[i].value;\r\n                            var ratingName = event.detail.Content[i].unique_name;\r\n                            if (typeof rating === \"number\") {\r\n                                rating = rating.toString();\r\n                                ClickTaleEvent(\"Medallia Rating For \" + ratingName + \" : \" + rating);\r\n                            } else {\r\n                                ClickTaleEvent(\"Medallia Rating For \" + ratingName + \" : No Rating Selected\");\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nfunction clickTaleCheckIfMedalliaExists() {\r\n    if (window.MDIGITAL \u0026\u0026 MDIGITAL.CUSTOM_EVENTS) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.doOnlyWhen(clickTaleMedalliaIntegration, clickTaleCheckIfMedalliaExists, 100, 100);\r\n\/\/Medallia Integration End\r\n\r\n\/\/OpinionLab Integration Start\r\nif (document.location.host.indexOf(\u0027opinionlab.com\u0027) \u003e -1) {\r\n    window.ClickTaleSettings.PTC.RecordSurvey = false;\r\n    if (window.olData \u0026\u0026 olData[\u0027clickTaleUID\u0027] \u0026\u0026 olData[\u0027clickTaleUID\u0027].length \u003e 1) {\r\n        window.ClickTaleSettings.PTC.RecordSurvey = true;\r\n        window.ClickTaleCookieDomain = document.location.host;\r\n        var uid = olData[\u0027clickTaleUID\u0027];\r\n        if (uid === \u0027null\u0027 || uid === \u0027\u0027) {\r\n            window.ClickTaleSettings.PTC.RecordSurvey = false;\r\n        }\r\n        var expires = \"\";\r\n        var days = 30;\r\n        if (days) {\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n            expires = \"; expires=\" + date.toUTCString();\r\n        }\r\n        var cookieName = window.ClickTaleUIDCookieName || \"WRUID\";\r\n        document.cookie = cookieName + \"=\" + uid + expires + \"; path=\/\";\r\n    }\r\n}\r\n\/\/OpinionLab Integration End\r\n\r\nfunction ClickTaleOnRecording() {\r\n\r\n    \/\/Clicktale Variables Start\r\n    var PID = ClickTaleGetPID();\r\n    var UID = ClickTaleGetUID();\r\n    var SID = ClickTaleGetSID();\r\n    var intLink = \"http:\/\/dmz01.app.clicktale.com\/Player.aspx?PID=\" + PID + \"\u0026UID=\" + UID + \"\u0026SID=\" + SID;\r\n    \/\/Clicktale Variables End\r\n\r\n    \/\/Medallia Integration Start\r\n    window.ClickTale.KampyleLink = intLink;\r\n    \/\/Medallia Integration End\r\n\r\n    \/\/Opinion Lab Integration Start\r\n    if (!isSafariV10 \u0026\u0026 window.localStorage) {\r\n        if (document.location.host.indexOf(\u0027opinionlab.com\u0027) === -1) {\r\n            var partition = \"www29\";\r\n            var guid = \"c08d3614-4c2f-4b0d-b983-40bd407e56a4\";\r\n            localStorage.setItem(\"CTrecordingLink\", intLink);\r\n            localStorage.setItem(\"CTuserID\", UID);\r\n            localStorage.setItem(\"CTpartition\", partition);\r\n            localStorage.setItem(\"CTguid\", guid);\r\n        }\r\n\r\n        if (document.location.host.indexOf(\"opinionlab.com\") \u003e -1) {\r\n            window.ClicktaleReplayLink = intLink;\r\n            ClickTaleEventTrigger(\"@ET@ OpinionLab Survey Accepted\");\r\n        }\r\n    }\r\n    \/\/Opinion Lab Integration End\r\n\r\n    \/\/Soasta Integration Start\r\n    function clickTaleSOIntegration() {\r\n        BOOMR.addVar({\r\n            \u0027ct_uid\u0027: UID,\r\n            \u0027ct_lnk\u0027: intLink\r\n        });\r\n        if (typeof BOOMR.session === \"object\") {\r\n            \/\/ClickTaleEvent(\"Soasta Session ID: \" + BOOMR.session.ID)\r\n            if (typeof ClickTaleField == \u0027function\u0027) {\r\n                ClickTaleField(\u0027Soasta ID\u0027, BOOMR.session.ID);\r\n            }\r\n            if (typeof ClickTaleEvent == \u0027function\u0027) {\r\n                ClickTaleEvent(\"@ID@\" + BOOMR.session.ID);\r\n            }\r\n        }\r\n    };\r\n\r\n    function clickTaleCheckIfSOExists() {\r\n        if (window.BOOMR \u0026\u0026 typeof BOOMR === \"object\" \u0026\u0026 typeof BOOMR.addVar === \"function\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    window.ClickTaleSettings.PTC.doOnlyWhen(clickTaleSOIntegration, clickTaleCheckIfSOExists, 100, 100);\r\n    \/\/Soasta Integration End\r\n}\r\n\r\n\/\/Integrations\r\nwindow.ClickTaleSettings.PTC.Integrations = [\r\n    \"Optimizely | Core\",\r\n    \"Optimizely | CEC\",\r\n    \"Opinion Lab | Core\",\r\n    \"Soasta | Core\",\r\n    \"Medallia | Core\"\r\n];\r\n\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdna.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdna.clicktale.net\/www\/\u0027;\r\n}\r\n\r\nClickTaleGlobal.init.monitorScriptName = \"Monitor-latest.js\";\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 typeof ClickTaleGlobal.init.pmc === \"function\" \u0026\u0026 ClickTaleGlobal.init.pmc(autoMonitorConfig);\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\tvar pccSrc = pccSource ? pccSource + \u0027c08d3614-4c2f-4b0d-b983-40bd407e56a4.js?DeploymentConfigName=Release_20180827\u0026Version=19\u0027 : (isHttps ? \u0027https:\/\/cdna.clicktale.net\/www29\/pcc\/c08d3614-4c2f-4b0d-b983-40bd407e56a4.js?DeploymentConfigName=Release_20180827\u0026Version=19\u0027 : \u0027http:\/\/cdna.clicktale.net\/www29\/pcc\/c08d3614-4c2f-4b0d-b983-40bd407e56a4.js?DeploymentConfigName=Release_20180827\u0026Version=19\u0027);\r\n\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\tpccScriptElement.src = pccSrc;\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\r\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\twindow.ClickTaleGlobal.PCCExists = true;\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=17, \r\n\t\tRatio=1, \r\n\t\tPartitionPrefix=\"www29\",\r\n\t\tSubsId=233167;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\tif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n}\r\n\r\nwindow.ClickTaleSettings.PTC.InitFuncs = window.ClickTaleSettings.PTC.InitFuncs || [];\r\nwindow.ClickTaleSettings.PTC.InitFuncs.push(function() {\r\n    var pcc = document.querySelector(\u0027script[src*=\"clicktale\"][src*=\"pcc\"]\u0027);\r\n    if (pcc) {\r\n        var versionmatch = pcc.src.match(\/DeploymentConfigName=(.+)\/i);\r\n        if (versionmatch \u0026\u0026 typeof ClickTaleExec === \u0027function\u0027) {\r\n            ClickTaleExec(\"console.info(\u0027\" + versionmatch[0] + \"\u0027);\");\r\n            ClickTaleEvent(\"Config: \" + versionmatch[1].replace(\/\\\u0026.+\/, \u0027\u0027));\r\n        }\r\n    }\r\n});\r\n\r\nfunction isOpacity(element) {\r\n    if (typeof element === \u0027string\u0027 \u0026\u0026 (element = document.querySelector(element)) \u0026\u0026 element.offsetHeight \u003e 0 \u0026\u0026 element.offsetWidth \u003e 0 \u0026\u0026 element.style.opacity === \u00271\u0027) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nfunction isVisible(element) {\r\n    if (element \u0026\u0026 typeof element == \u0027string\u0027) {\r\n        element = document.querySelectorAll(element);\r\n    }\r\n    if (element instanceof NodeList \u0026\u0026 element.length \u003e 0) {\r\n        return Array.prototype.filter.call(element, function(el) {\r\n            return isVisible(el);\r\n        }).length == element.length;\r\n    }\r\n    if (element instanceof Element) {\r\n        return !!(element \u0026\u0026 !!(element.compareDocumentPosition(document) \u0026 Node.DOCUMENT_POSITION_CONTAINS) \u0026\u0026 ((element.offsetWidth \u003e 0 \u0026\u0026 element.offsetHeight \u003e 0) || element[\u0027getClientRects\u0027]().length \u003e 0));\r\n    }\r\n    return false;\r\n};\r\n\r\nfunction doUpload() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        ClickTaleUploadPageNow();\r\n        window.ClickTaleSettings.PTC.UploadPageHappened = true;\r\n    };\r\n};\r\n\r\nfunction isReadyToRecord() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        \/\/GAP-189,GAP-228\r\n        if (\/\\\/checkout\\\/(?:search|category).do\/i.test(document.location.href)) {\r\n            return !!document.querySelector(\u0027div.favorites\u0027) \u0026\u0026 document.querySelectorAll(\u0027img.product-card--img[src*=\"assets\"]\u0027).length \u003e 1 ;\r\n        }\r\n\t\t\r\n        \/\/GAP-9\r\n        else if (document.location.href.indexOf(\u0027\/checkout\/order.do\u0027) \u003e -1) {\r\n            return isOpacity(\u0027#signInInput\u0027) || isOpacity(\u0027#shippingInput\u0027) || isOpacity(\u0027#giftingInput\u0027) || isOpacity(\u0027#billingInput\u0027) || isOpacity(\u0027#orderPlacementInput\u0027) || isVisible(\u0027#requestTimeOutPanel\u0027) || isVisible(\u0027#sessionTimeOutPanel\u0027);\r\n        } else if (location.pathname.toLowerCase().indexOf(\u0027\/buy\/shopping_bag.do\u0027) \u003e -1) {\r\n            return document.querySelectorAll(\u0027.shoppingBagCheckout\u0027).length \u003e 0 \u0026\u0026 document.querySelectorAll(\u0027.productDetails\u0027).length \u003e 0;\r\n        } else if (location.pathname.toLowerCase() === \u0027\/checkout\/place-order\/\u0027) {\r\n            return !(document.querySelector(\u0027.processing__circle\u0027));\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nfunction startRecordingChecks() {\r\n    if (\/\\\/bright\\\/\/i.test(location.pathname) \u0026\u0026 top != self) {\r\n        if (window.innerWidth == 0 \u0026\u0026 window.innerHeight == 0) {\r\n            setTimeout(startRecordingChecks, 500);\r\n            return;\r\n        }\r\n    }\r\n\r\n    if (typeof ClickTaleDelayUploadPage === \u0027function\u0027) {\r\n        ClickTaleDelayUploadPage();\r\n\r\n        \/\/var PWADelay = \/pwa=true\/i.test(location.search) ? 5000 : 0;\r\n        var intervals = (document.location.href.indexOf(\u0027\/checkout\/order.do\u0027) \u003e -1) ? 5 : 10;\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 1000, intervals, doUpload);\r\n\r\n        var initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\n        for (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n            if (typeof initFuncs[i] === \u0027function\u0027) {\r\n                initFuncs[i]();\r\n            }\r\n        }\r\n    }\r\n\r\n    window.ClickTaleIncludedOnDOMReady = true;\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n\r\n    ClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\r\n    if ((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString())) {\r\n        ClickTalePrevOnReady();\r\n    }\r\n}\r\n\r\nif (document.readyState = \u0027complete\u0027) {\r\n    setTimeout(startRecordingChecks, 1000);\r\n} else {\r\n    window.addEventListener(\u0027load\u0027, function() {\r\n        setTimeout(startRecordingChecks, 1000);\r\n    });\r\n}\r\n\r\n\/\/don\u0027t continue with regular recording\r\nreturn;\r\n\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\t\r\n\twrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",n,!1)}catch(e){}function n(e){var t,n;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(!function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=o(\"script\");e.setAttribute(\"type\",\"application\/javascript\"),e.setAttribute(\"id\",\"ctTestRulesModule\"),e.onload=function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")};var t=ClickTaleGetPID();e.src=ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+t,document.getElementById(\"ctTestRulesModule\")||document.body.appendChild(e)}(),(n=o(\"script\")).setAttribute(\"type\",\"text\/javascript\"),n.setAttribute(\"id\",\"ctVisualEditorClientModule\"),n.src=ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\",document.getElementById(\"ctVisualEditorClientModule\")||document.body.appendChild(n)))}function o(e){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",e):document.createElement(e)}}();");
				document.body.appendChild(script);
			})();
	}		

if (!ClickTaleGlobal.init.configFoundPTC)
{
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2018 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 17\r\n\/\/ WR destination: www29\r\n\/\/ WR version: latest\r\n\/\/ Recording ratio: 1\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\nvar ctVEconfig ={\"VE_BASE_URL\":\"https:\/\/ve-cec-na1.app.clicktale.com\/\"};\r\n\r\nwindow.ClickTaleGlobal.VisualEditorDesignerExists = !!72;\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\r\n{\r\n\tClickTaleCreateDOMElement = function(tagName)\r\n\t{\r\n\t\tif (document.createElementNS)\r\n\t\t{\r\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\r\n\t\t}\r\n\t\treturn document.createElement(tagName);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleAppendInHead) != \"function\")\r\n{\r\n\tClickTaleAppendInHead = function(element)\r\n\t{\r\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\r\n\t\tparent.appendChild(element);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\r\n{\r\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\r\n\t{\r\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\r\n\t\tscript.text = code;\r\n\t\treturn script;\r\n\t}\r\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\nwindow.CTPauseResume = function(pause) {\r\n    if (typeof clickTaleStartEventSignal === \u0027undefined\u0027)\r\n        return;\r\n\r\n    if (pause \u0026\u0026 typeof ClickTaleIsRecording === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording() \u0026\u0026 typeof ClickTaleGlobal === \u0027object\u0027 \u0026\u0026 typeof ClickTaleGlobal.exports.changeMonitor === \u0027object\u0027 \u0026\u0026 typeof ClickTaleGlobal.exports.changeMonitor.disconnect === \u0027function\u0027) {\r\n        ClickTaleGlobal.exports.changeMonitor.disconnect();\r\n        window.ctStop = Date.now();\r\n    }\r\n    if (!pause \u0026\u0026 typeof ClickTaleIsRecording === \u0027function\u0027) {\r\n        interval = (Date.now() - window.ctStop) \/ 1000;\r\n        var evtStr = (interval \u003e 0 \u0026\u0026 interval \u003c 8) ? \"Onload | Resume \" + Math.round(interval) + \" sec\" : \"Onload | Paginate\";\r\n        clickTaleStartEventSignal(evtStr);\r\n        window.ctStop = Date.now();\r\n    }\r\n}\r\n\r\n\/\/CEC monitor\r\nif (window.ClickTaleMonitor \u0026\u0026 window.ClickTaleMonitor.Settings) {\r\n    var settings = ClickTaleMonitor.Settings.get();\r\n    settings.shouldStartMonitor(function() {\r\n        return (\/(?:oldnavy|bananarepublic)\/i.test(location.hostname));\r\n    });\r\n}\r\n\r\n\/\/PTC Code Version 9.15\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSettings.Compression = window.ClickTaleSettings.Compression || {};\r\nif (document.readyState === \u0027complete\u0027) {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UploadPageHappened = false;\r\nwindow.ClickTaleSettings.PTC.IsMobile = false;\r\nwindow.ClickTaleSettings.PTC.textRegex = \/\\w|[^\\x00-\\x7F]\/g;\r\n\r\nwindow.ClickTaleUIDCookieName = \u0027WRUID20171123\u0027;\r\n\r\nfunction clickTaleReadCookie(name) {\r\n    var nameEQ = name + \"=\";\r\n    var ca = document.cookie.split(\u0027;\u0027);\r\n    for (var i = 0; i \u003c ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == \u0027 \u0027)\r\n            c = c.substring(1, c.length);\r\n        if (c.indexOf(nameEQ) == 0)\r\n            return c.substring(nameEQ.length, c.length);\r\n    }\r\n    return null;\r\n};\r\n\r\nif (clickTaleReadCookie(window.ClickTaleUIDCookieName) === \"\") {\r\n    document.cookie = window.ClickTaleUIDCookieName + \"=\u0027\u0027;domain=secure-www.gap.com;path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;\";\r\n}\r\n\r\nif (!!navigator.userAgent.match(\/Version\\\/[\\d\\.]+.*Safari\/)) {\r\n    ClickTaleSettings.Protocol.UseBeacon = false;\r\n    if (!!navigator \u0026\u0026 typeof navigator.sendBeacon === \u0027function\u0027) {\r\n        navigator.oldsendBeacon = navigator.sendBeacon;\r\n        navigator.sendBeacon = function(url) {\r\n            if (\/.clicktale.net\/.test(url)) {\r\n                setTimeout(function() {\r\n                    var img = new Image();\r\n                    img.src = url;\r\n                }, 0);\r\n                return;\r\n            }\r\n            return navigator.oldsendBeacon.apply(this, arguments)\r\n        }\r\n    }\r\n}\r\n\r\n\/\/GAP-220\r\nwindow.ClickTaleSettings.PTC.overWriteXHR = function(xhr) {\r\n    if (XMLHttpRequest != XMLHttpRequest.prototype.constructor) {\r\n        return new XMLHttpRequest.prototype.constructor();\r\n    } else {\r\n        return xhr;\r\n    }\r\n}\r\nwindow.ClickTaleOnXHRCreated = window.ClickTaleSettings.PTC.overWriteXHR;\r\nwindow.CEC = window.CEC || {};\r\nwindow.CEC.onXhrCreated = window.ClickTaleSettings.PTC.overWriteXHR;\r\nvar isSafariV10 = false;\r\n\r\nwindow.ClickTaleSettings.CheckAgentSupport = function(f, v) {\r\n    if (v.t == v.Sa \u0026\u0026 v.v \u003c 11) {\r\n        isSafariV10 = true;\r\n    }\r\n    if (v.t == v.ED \u0026\u0026 v.v \u003c 14) {\r\n        window.ClickTaleSettings.Compression.Async = false;\r\n    }\r\n    if (v.m) {\r\n        window.ClickTaleSettings.PTC.IsMobile = true;\r\n        \/\/webworkers off\r\n        \/\/ ClickTaleSettings.Compression.Async = false;\r\n        \/\/ ClickTaleSettings.Compression.UseDefer = true;\r\n        \/\/ webworkers on\r\n        \/\/ ClickTaleSettings.Compression.Async = true;\r\n        \/\/ ClickTaleSettings.Compression.UseDefer = false;\r\n    }\r\n\r\n    if (!(v.t == v.IE \u0026\u0026 v.v == 10)) {\r\n        window.ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n        window.ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n\r\n    }\r\n    var fv = f(v);\r\n    window.ClickTaleSettings.PTC.okToRunPCC = fv;\r\n    return fv;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.startsWith = function(strToTest, str) {\r\n    return strToTest.lastIndexOf(str, 0) === 0;\r\n};\r\nwindow.ClickTaleSettings.PTC.RulesObj = [{\r\n    selector: \"input[type=\\\"text\\\"], input[type=\\\"tel\\\"], input[type=\\\"email\\\"], input[type=\\\"password\\\"], input[type=\\\"hidden\\\"]\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    }\r\n}, {\r\n    selector: \".ctHidden\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}, {\r\n    selector: \u0027div.universal-nav--right\u003ediv\u003ebutton\u003ediv\u003espan, span#userAccountName, div[id^=currentAddress], span[id^=currentAddress], li[id^=ui-id-], span[id^=shippingSummary], span[id^=billingSummary], p#giftingSummaryMessage, span[id^=billingDisplay], span#completeRegistrationUserName, span#userEmailAddress, div#personalInformation span.linkValue, label[for^=address], span.expiration, span.billingAddress, span.orderNumber, div#billingDetailSection\u003ep, div#shippingDetailSection\u003ep, span.magic-link-confirmation--title-text\u003eb, .cardholder-name, div.addressBlock\u003ediv, div.addressBlock\u003ediv\u003espan\u0027, \/\/GAP-146\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    }\r\n}, {\r\n    selector: \u0027#emailAddressBlock\u003e.displayEmail\u0027, \/\/GAP-414\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    }\r\n}, {\r\n    selector: \u0027[is-logged-in=\"isLoggedIn\"] .activeBagContainerTitle, [data-bind*=\"cardPreApprovalCustomerEmailId\"], [data-bind*=\"congratsMessageOnCardConfirm\"], [data-bind*=\"cardNumber\"], [data-bind*=\"PromoCode\"]\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/buy\\\/shopping_bag\\.do\/i\r\n    }\r\n}, {\r\n    selector: \u0027#billingCreditCardId option, .address span, .shippingStateContainer option\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/checkout\\\/order.do\/i\r\n    }\r\n}, {\r\n    selector: \u0027#signInContainer__maskedEmail, .__react_component_tooltip .multi-line, .__react_component_tooltip span, .shipping__display--nameEllipsis, #orderConfirm__greetText\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/checkout\\\/place-order\/i\r\n    }\r\n}, {\r\n    selector: \u0027.inputContainer.body-a_universal\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/profile\\\/forgot_password.do\/i\r\n    }\r\n}, {\r\n    selector: \u0027.accountSettingsSection .linkValue\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/profile\\\/account_summary.do\/i\r\n    }\r\n}, {\r\n    selector: \u0027.email-address-info\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/profile\\\/changePassword.do\/i\r\n    }\r\n}, {\r\n    selector: \".emailAddressLine em, .email-address-info\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}, {\r\n    selector: \u0027.okta-button-select option\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/profile\\\/forgot_password.do\/i\r\n    }\r\n}, {\r\n    selector: \u0027.acceptance-container span\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/credit-card-accept\\\/\/i\r\n    }\r\n}, {\r\n    selector: \u0027#birthday, #annualNetIncome\u0027,\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/\\\/credit-card-accept\\\/\/i\r\n    }\r\n}];\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObjRemoveEls = [{\r\n    rewriteApiReplace: \u0027#mainNavBROL .g-1-3\u0027\r\n}];\r\n\r\n(function() {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 window.ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelector(window.ClickTalePIISelector);\r\n\r\n            window.ClickTaleSettings.PTC.RulesObj.push({\r\n                selector: window.ClickTalePIISelector,\r\n                changeMon: {\r\n                    Attributes: [\u0027value\u0027],\r\n                    Text: true\r\n                },\r\n                rewriteApi: {\r\n                    Attributes: [\u0027value\u0027],\r\n                    Text: true\r\n                }\r\n            });\r\n\r\n        } catch (err) {}\r\n    }\r\n})();\r\n\r\nwindow.ClickTaleSettings.PTC.AssetManager = {\r\n    isActive: true,\r\n    isNeedForImg: false,\r\n    subscriberId: \u0027233167\u0027,\r\n    pid: \u002717\u0027,\r\n    storageUrl: \u0027https:\/\/s3.amazonaws.com\/nv-p1-s3-assets-01\/\u0027,\r\n    prefixSpecialCharacters: false,\r\n    getPrefixUrl: function() {\r\n        return this.storageUrl + this.subscriberId + \u0027\/\u0027 + this.pid;\r\n    },\r\n    getFullURL: function(type, url) {\r\n        var AMUrl = \u0027\u0027\r\n        if (url) {\r\n            switch (type) {\r\n                case \u0027css\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/CSS\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    if (this.prefixSpecialCharacters \u0026\u0026 this.prefixSpecialCharacters.test(AMUrl)) {\r\n                        AMUrl = AMUrl.replace(\/\\?\/g, \"%253F\").replace(\/\\\u0026\/g, \"%26\").replace(\/\\=\/g, \"%3D\");\r\n                    } else {\r\n                        AMUrl = AMUrl.replace(\/\\?.*\/g, \"\");\r\n                    }\r\n                    break;\r\n                case \u0027image\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/IMAGE\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    break;\r\n            }\r\n\r\n        }\r\n        return !!AMUrl ? AMUrl : false;\r\n    },\r\n    makeChanges: function(bodyClone) {\r\n        if (this.pid \u0026\u0026 this.subscriberId) {\r\n            Array.prototype.forEach.call(bodyClone.querySelectorAll(\u0027ctdep-link[href][rel*=\"stylesheet\"]\u0027), function(el, ind) {\r\n                var hrefAttr = el.getAttribute(\u0027href\u0027);\r\n                if (hrefAttr.indexOf(window.ClickTaleSettings.PTC.AssetManager.storageUrl) == -1 \u0026\u0026 hrefAttr.indexOf(\u0027fonts.googleapis.com\u0027) == -1) {\r\n                    if (hrefAttr.indexOf(\u0027http\u0027) == -1) {\r\n                        var hrefLive = document.querySelector(\u0027link[href=\"\u0027 + hrefAttr + \u0027\"]\u0027);\r\n                        if (hrefLive \u0026\u0026 hrefLive.href) {\r\n                            hrefAttr = hrefLive.href;\r\n                        }\r\n                    }\r\n                    var finalCssURL = window.ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027css\u0027, hrefAttr);\r\n                    el.setAttribute(\u0027href\u0027, finalCssURL);\r\n                }\r\n            });\r\n            if (this.isNeedForImg) {\r\n                Array.prototype.forEach.call(bodyClone.querySelectorAll(\u0027ctdep-img[src]\u0027), function(el, ind) {\r\n                    var srcAttr = el.getAttribute(\u0027src\u0027);\r\n                    if (srcAttr.indexOf(window.ClickTaleSettings.PTC.AssetManager.storageUrl) == -1) {\r\n                        if (srcAttr.indexOf(\u0027http\u0027) == -1) {\r\n                            var srcLive = document.querySelector(\u0027img[src=\"\u0027 + srcAttr + \u0027\"]\u0027);\r\n                            if (srcLive \u0026\u0026 srcLive.src) {\r\n                                srcAttr = srcLive.src;\r\n                            }\r\n                        }\r\n                        var finalImageURL = window.ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027image\u0027, srcAttr);\r\n                        el.setAttribute(\u0027src\u0027, finalImageURL);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.cloneNodeIE9 = function(innerHTML) {\r\n    if (innerHTML instanceof Element) {\r\n        innerHTML = innerHTML.innerHTML;\r\n    }\r\n\r\n    var reg = \/\u003c(area|base|br|col|command|embed|hr|input|keygen|link|menuitem|meta|param|source|track|wbr|img)[^\u003e]*\u003e\/gi;\r\n    var newNode = document.createElement(\u0027temp-div\u0027);\r\n    var docFrag = document.createDocumentFragment();\r\n    docFrag.appendChild(newNode);\r\n    if (document.documentMode) {\r\n        innerHTML = innerHTML\r\n            .replace(\/(\u003csvg[\\s\\S]+?\u003c\\\/svg\u003e)\/gi, function(m, g1) {\r\n                if (g1) {\r\n                    return \u0027\u003c!--clicktalesvgreplace \u0027 + g1.replace(\/\u003c!--[\\s\\S]+?--\u003e\/g, \u0027\u0027) + \u0027 --\u003e\u0027;\r\n                }\r\n                return m;\r\n            });\r\n    }\r\n    innerHTML = innerHTML\r\n        .replace(\/\u003cscript\\b([^\u003e]*)\u003e([\\s\\S]*?)\u003c\\\/script\u003e\/gi, \u0027\u003cscript\u003e\u003c\\\/script\u003e\u0027)\r\n        .replace(\/(\u003cdiv id=\"?ClickTaleDiv\"?[^\u003e]+\u003e)\\s*\u003cscript[^\u003e]+\u003e\u003c\\\/script\u003e\\s*(\u003c\\\/div\u003e)\/i, \u0027$1$2\u0027)\r\n        .replace(reg, function(m, g1) {\r\n            if (g1) {\r\n                var checkReg = new RegExp(\u0027\u003c\u0027 + g1 + \u0027[^\\\\w]\u0027);\r\n                if (checkReg.test(m)) {\r\n                    return m + \u0027\u003c\\\/\u0027 + g1 + \u0027\u003e\u0027;\r\n                }\r\n            }\r\n            return m\r\n        })\r\n        .replace(\/(\u003c\\\/?)([A-Za-z])\/g, \u0027$1ctdep-$2\u0027)\r\n        .replace(\/ctdep-style\/gi, \u0027style\u0027);\r\n\r\n    newNode.innerHTML = innerHTML;\r\n\r\n    return newNode;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.ConfigChangeMonitor = function() {\r\n    if (window.ClickTaleSettings.PTC.EnableChangeMonitor) {\r\n\r\n        var a = document.createElement(\"script\"),\r\n            s = document.getElementsByTagName(\"script\")[0];\r\n        a.async = true;\r\n        a.crossOrigin = \"anonymous\";\r\n        a.type = \"text\/javascript\";\r\n        a.src = \"https:\/\/cdnssl.clicktale.net\/www\/ChangeMonitor-latest.js\";\r\n        s.parentNode.insertBefore(a, s);\r\n\r\n        window.ClickTaleSettings.ChangeMonitor = {\r\n            Enable: true,\r\n            LiveExclude: true,\r\n            AddressingMode: \"id\",\r\n            OnReadyHandler: function(changeMonitor) {\r\n                changeMonitor.observe();\r\n                if (typeof window.ClickTaleCMSelector === \u0027string\u0027 \u0026\u0026 window.ClickTaleCMSelector != \u0027\u0027) {\r\n                    changeMonitor.exclude({\r\n                        selector: window.ClickTaleCMSelector,\r\n                        multiple: true\r\n                    });\r\n                }\r\n                changeMonitor.exclude({\r\n                    selector: \u0027div.toggle-universal-modal, div#footer-slider, div#carousel_newArrivals_window, #headline_segA, .footer-blue-inner, script\u0027,\r\n                    multiple: true\r\n                });\r\n                if (!\/(?:shopping_bag|category|product).do\/i.test(location.pathname)) {\r\n                    changeMonitor.exclude({\r\n                        selector: \u0027.universal-modal\u0027,\r\n                        multiple: true\r\n                    });\r\n                }\r\n\r\n                var CMRemrule = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (CMRemrule) {\r\n                    for (var i = 0; i \u003c CMRemrule.length; i++) {\r\n                        var rule = CMRemrule[i];\r\n                        var CMlocation = rule[\u0027location\u0027];\r\n                        if ((!CMlocation || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) != -1))) {\r\n                            if (rule.changeMon) {\r\n                                changeMonitor.exclude(rule.changeMon);\r\n                            }\r\n                            if (rule.changeMonLive) {\r\n                                changeMonitor.exclude({\r\n                                    selector: rule.changeMonLive,\r\n                                    multiple: true\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            OnBeforeReadyHandler: function(settings) {\r\n                settings.Enable = window.ClickTaleGetUID ? !!ClickTaleGetUID() : false;\r\n                return settings;\r\n            },\r\n            Filters: {\r\n                MaxBufferSize: 1000000,\r\n                MaxElementCount: 25000,\r\n                Before: [function(mutations) {\r\n                    if (typeof ClickTaleSettings.PTC.CMBeforeFilter === \u0027function\u0027) {\r\n                        return ClickTaleSettings.PTC.CMBeforeFilter(mutations);\r\n                    }\r\n                    return true;\r\n                }]\r\n            },\r\n            PII: {\r\n                Text: [],\r\n                Attributes: []\r\n            }\r\n        }\r\n        if (document.location.pathname.toLocaleLowerCase().indexOf(\"\/buy\/shopping_bag.do\") \u003e -1) {\r\n            window.ClickTaleSettings.ChangeMonitor.AutoExclude = {\r\n                Enable: false,\r\n                Repeats: 10,\r\n                Interval: 200\r\n            };\r\n        } else if (!!document.querySelector(\u0027#topNav\u0027)) {\r\n            window.ClickTaleSettings.ChangeMonitor.AutoExclude = {\r\n                Enable: false,\r\n                Repeats: 10,\r\n                Interval: 300\r\n            };\r\n        } else {\r\n            window.ClickTaleSettings.ChangeMonitor.AutoExclude = {\r\n                Enable: true,\r\n                Repeats: 10,\r\n                Interval: 200\r\n            };\r\n        }\r\n\r\n        var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n        if (RulesObj) {\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Text = window.ClickTaleSettings.ChangeMonitor.PII.Text || [];\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Attributes = window.ClickTaleSettings.ChangeMonitor.PII.Attributes || [];\r\n            for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                var CMrule = RulesObj[i][\u0027changeMon\u0027];\r\n                var CMlocation = RulesObj[i][\u0027location\u0027];\r\n                if (!CMrule || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1)) {\r\n                    continue;\r\n                }\r\n                var selector = RulesObj[i][\u0027selector\u0027];\r\n                var attributesArr = CMrule.Attributes;\r\n                if (attributesArr instanceof Array) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Attributes.push({\r\n                        selector: selector,\r\n                        transform: (function(attributesArr) {\r\n                            return function(el) {\r\n                                var attrs = el.attributes;\r\n                                var attrsToReturn = {}\r\n                                for (var i = 0; i \u003c attrs.length; i++) {\r\n                                    var name = attrs[i].nodeName;\r\n                                    attrsToReturn[name] = attrs[i].nodeValue;\r\n                                }\r\n                                for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                    var attr = attributesArr[u];\r\n                                    var attrib = el.getAttribute(attr);\r\n                                    if (typeof attrib === \u0027string\u0027) {\r\n                                        attrsToReturn[attr] = attrib.replace(window.ClickTaleSettings.PTC.textRegex, \u0027-\u0027);\r\n                                    }\r\n                                }\r\n\r\n                                return attrsToReturn;\r\n                            }\r\n                        })(attributesArr)\r\n                    });\r\n                }\r\n                if (CMrule.Text) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Text.push({\r\n                        selector: [selector, function(elements) {\r\n                            var els = Array.prototype.reduce.call(elements, function(curr, add) {\r\n                                return curr.concat(Array.prototype.slice.call(add.childNodes));\r\n                            }, []);\r\n                            return Array.prototype.filter.call(els, function(child) {\r\n                                return !!(child \u0026\u0026 child.nodeType === 3);\r\n                            });\r\n                        }],\r\n                        transform: function(el) {\r\n                            return el.textContent.replace(window.ClickTaleSettings.PTC.textRegex, \u0027-\u0027);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Compression = {\r\n    Method: function() {\r\n        return \"deflate\";\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Transport = {\r\n    Legacy: false,\r\n    MaxConcurrentRequests: 5,\r\n    BigBuffer: 60000,\r\n    SmallBuffer: 1000\r\n};\r\n\r\nwindow.ClickTaleSettings.RewriteRules = {\r\n    OnBeforeRewrite: function(rewriteApi) {\r\n        if (window.ClickTaleSettings.PTC.RulesObj) {\r\n            rewriteApi.add(function(buffer) {\r\n                var bodyClone = ClickTaleSettings.PTC.cloneNodeIE9(buffer);\r\n\r\n                if (window.ClickTaleSettings.PTC.AssetManager \u0026\u0026\r\n                    window.ClickTaleSettings.PTC.AssetManager.isActive \u0026\u0026\r\n                    typeof window.ClickTaleSettings.PTC.AssetManager.makeChanges == \u0027function\u0027) {\r\n                    window.ClickTaleSettings.PTC.AssetManager.makeChanges(bodyClone);\r\n                }\r\n\r\n                var selectorReg = \/((?:^|,|\\s|\u003e|\\+|\\~)+)([A-Za-z])\/g;\r\n\r\n                var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n                for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                    var rewriteApirule = RulesObj[i][\u0027rewriteApi\u0027];\r\n                    var rewriteApilocation = RulesObj[i][\u0027location\u0027];\r\n                    if (!rewriteApirule || (rewriteApilocation \u0026\u0026 document.location[rewriteApilocation[\u0027prop\u0027]].toLowerCase().search(rewriteApilocation.search) === -1)) {\r\n                        continue;\r\n                    }\r\n                    var selector = RulesObj[i][\u0027selector\u0027].replace(selectorReg, \u0027$1ctdep-$2\u0027);\r\n                    var elements = bodyClone.querySelectorAll(selector);\r\n\r\n                    Array.prototype.forEach.call(elements, function(el, ind) {\r\n                        var attributesArr = rewriteApirule.Attributes;\r\n                        if (attributesArr instanceof Array) {\r\n\r\n                            for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                var attr = attributesArr[u];\r\n                                var attrib = el.getAttribute(attr);\r\n                                if (typeof attrib === \u0027string\u0027) {\r\n                                    el.setAttribute(attr, attrib.replace(window.ClickTaleSettings.PTC.textRegex, \u0027-\u0027));\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        if (rewriteApirule.Text) {\r\n                            var children = el.childNodes;\r\n                            Array.prototype.forEach.call(children, function(child) {\r\n                                if (child \u0026\u0026 child.nodeType === 3) {\r\n                                    child.textContent = child.textContent.replace(window.ClickTaleSettings.PTC.textRegex, \u0027-\u0027);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                var RulesObjRemoveEls = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (RulesObjRemoveEls) {\r\n                    for (var i = 0; i \u003c RulesObjRemoveEls.length; i++) {\r\n                        if (RulesObjRemoveEls[i].rewriteApi) {\r\n                            var elementsToRemove = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApi.replace(selectorReg, \u0027$1ctdep-$2\u0027));\r\n                            Array.prototype.forEach.call(elementsToRemove, function(el, ind) {\r\n                                if (el.parentNode) {\r\n                                    el.parentNode.removeChild(el);\r\n                                }\r\n                            });\r\n                        }\r\n                        if (RulesObjRemoveEls[i].rewriteApiReplace) {\r\n                            var elementsToReplace = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApiReplace.replace(selectorReg, \u0027$1ctdep-$2\u0027));\r\n                            Array.prototype.forEach.call(elementsToReplace, function(el, ind) {\r\n                                if (el.parentNode) {\r\n                                    var comment = document.createComment(el.outerHTML);\r\n                                    el.parentNode.replaceChild(comment, el);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var reg = \/\u003e\u003c\\\/(?:area|base|br|col|command|embed|hr|input|keygen|link|menuitem|meta|param|source|track|wbr|img)\u003e\/gi;\r\n                var clone = bodyClone.innerHTML.replace(\/ctdep-\/gi, \u0027\u0027).replace(reg, \u0027 \\\/\u003e\u0027).replace(\/\u003c!--clicktalesvgreplace ([\\s\\S]+?)--\u003e\/g, \u0027$1\u0027);\r\n                return clone;\r\n            });\r\n        }\r\n        rewriteApi.add({\r\n            pattern: \/(\u003chead[^\u003e]*\u003e)\/i,\r\n            replace: \u0027$1\u003cscript type=\"text\\\/javascript\" class=\"cm-ignore\" src=\"https:\\\/\\\/cdnssl.clicktale.net\\\/www\\\/tc\\\/jquery.min.js\"\u003e\u003c\\\/script\u003e\u0027\r\n        });\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.doOnlyWhen = function(toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if ((!toDoHandler) || (!toCheckHandler))\r\n        return;\r\n    if (typeof interval == \"undefined\")\r\n        interval = 100;\r\n    if (typeof times == \"undefined\")\r\n        times = 10;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \u0027function\u0027) {\r\n            failHandler();\r\n        }\r\n        return;\r\n    }\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n    }\r\n    setTimeout(function() {\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler);\r\n    }, interval);\r\n};\r\n\r\n\/\/Medallia Integration Start\r\nfunction clickTaleMedalliaIntegration() {\r\n    window.addEventListener(\u0027MDigital_Submit_Feedback\u0027, function(event) {\r\n        if (window.ClickTaleIsRecording \u0026\u0026 ClickTaleIsRecording()) {\r\n            ClickTaleEventTrigger(\"@ET@ Medallia Survey Submitted\");\r\n            if (event \u0026\u0026 event.detail) {\r\n                if (event.detail.Feedback_UUID \u0026\u0026 event.detail.Form_ID \u0026\u0026 event.detail.Form_Type) {\r\n                    ClickTaleEvent(\"Medallia Feedback UUID: \" + event.detail.Feedback_UUID);\r\n                    ClickTaleEvent(\"Medallia Form ID: \" + event.detail.Form_ID);\r\n                    ClickTaleEvent(\"Medallia Form Type: \" + event.detail.Form_Type);\r\n                }\r\n                if (event.detail.Content \u0026\u0026 event.detail.Content.length \u003e 0) {\r\n                    for (var i = 0; i \u003c event.detail.Content.length; i++) {\r\n                        if (event.detail.Content[i].type.toLowerCase().indexOf(\"grading\") \u003e -1 ||\r\n                            event.detail.Content[i].type.toLowerCase().indexOf(\"nps\") \u003e -1) {\r\n                            var rating = event.detail.Content[i].value;\r\n                            var ratingName = event.detail.Content[i].unique_name;\r\n                            if (typeof rating === \"number\") {\r\n                                rating = rating.toString();\r\n                                ClickTaleEvent(\"Medallia Rating For \" + ratingName + \" : \" + rating);\r\n                            } else {\r\n                                ClickTaleEvent(\"Medallia Rating For \" + ratingName + \" : No Rating Selected\");\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nfunction clickTaleCheckIfMedalliaExists() {\r\n    if (window.MDIGITAL \u0026\u0026 MDIGITAL.CUSTOM_EVENTS) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.doOnlyWhen(clickTaleMedalliaIntegration, clickTaleCheckIfMedalliaExists, 100, 100);\r\n\/\/Medallia Integration End\r\n\r\n\/\/OpinionLab Integration Start\r\nif (document.location.host.indexOf(\u0027opinionlab.com\u0027) \u003e -1) {\r\n    window.ClickTaleSettings.PTC.RecordSurvey = false;\r\n    if (window.olData \u0026\u0026 olData[\u0027clickTaleUID\u0027] \u0026\u0026 olData[\u0027clickTaleUID\u0027].length \u003e 1) {\r\n        window.ClickTaleSettings.PTC.RecordSurvey = true;\r\n        window.ClickTaleCookieDomain = document.location.host;\r\n        var uid = olData[\u0027clickTaleUID\u0027];\r\n        if (uid === \u0027null\u0027 || uid === \u0027\u0027) {\r\n            window.ClickTaleSettings.PTC.RecordSurvey = false;\r\n        }\r\n        var expires = \"\";\r\n        var days = 30;\r\n        if (days) {\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n            expires = \"; expires=\" + date.toUTCString();\r\n        }\r\n        var cookieName = window.ClickTaleUIDCookieName || \"WRUID\";\r\n        document.cookie = cookieName + \"=\" + uid + expires + \"; path=\/\";\r\n    }\r\n}\r\n\/\/OpinionLab Integration End\r\n\r\nfunction ClickTaleOnRecording() {\r\n\r\n    \/\/Clicktale Variables Start\r\n    var PID = ClickTaleGetPID();\r\n    var UID = ClickTaleGetUID();\r\n    var SID = ClickTaleGetSID();\r\n    var intLink = \"http:\/\/dmz01.app.clicktale.com\/Player.aspx?PID=\" + PID + \"\u0026UID=\" + UID + \"\u0026SID=\" + SID;\r\n    \/\/Clicktale Variables End\r\n\r\n    \/\/Medallia Integration Start\r\n    window.ClickTale.KampyleLink = intLink;\r\n    \/\/Medallia Integration End\r\n\r\n    \/\/Opinion Lab Integration Start\r\n    if (!isSafariV10 \u0026\u0026 window.localStorage) {\r\n        if (document.location.host.indexOf(\u0027opinionlab.com\u0027) === -1) {\r\n            var partition = \"www29\";\r\n            var guid = \"c08d3614-4c2f-4b0d-b983-40bd407e56a4\";\r\n            localStorage.setItem(\"CTrecordingLink\", intLink);\r\n            localStorage.setItem(\"CTuserID\", UID);\r\n            localStorage.setItem(\"CTpartition\", partition);\r\n            localStorage.setItem(\"CTguid\", guid);\r\n        }\r\n\r\n        if (document.location.host.indexOf(\"opinionlab.com\") \u003e -1) {\r\n            window.ClicktaleReplayLink = intLink;\r\n            ClickTaleEventTrigger(\"@ET@ OpinionLab Survey Accepted\");\r\n        }\r\n    }\r\n    \/\/Opinion Lab Integration End\r\n\r\n    \/\/Soasta Integration Start\r\n    function clickTaleSOIntegration() {\r\n        BOOMR.addVar({\r\n            \u0027ct_uid\u0027: UID,\r\n            \u0027ct_lnk\u0027: intLink\r\n        });\r\n        if (typeof BOOMR.session === \"object\") {\r\n            \/\/ClickTaleEvent(\"Soasta Session ID: \" + BOOMR.session.ID)\r\n            if (typeof ClickTaleField == \u0027function\u0027) {\r\n                ClickTaleField(\u0027Soasta ID\u0027, BOOMR.session.ID);\r\n            }\r\n            if (typeof ClickTaleEvent == \u0027function\u0027) {\r\n                ClickTaleEvent(\"@ID@\" + BOOMR.session.ID);\r\n            }\r\n        }\r\n    };\r\n\r\n    function clickTaleCheckIfSOExists() {\r\n        if (window.BOOMR \u0026\u0026 typeof BOOMR === \"object\" \u0026\u0026 typeof BOOMR.addVar === \"function\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    window.ClickTaleSettings.PTC.doOnlyWhen(clickTaleSOIntegration, clickTaleCheckIfSOExists, 100, 100);\r\n    \/\/Soasta Integration End\r\n}\r\n\r\n\/\/Integrations\r\nwindow.ClickTaleSettings.PTC.Integrations = [\r\n    \"Optimizely | Core\",\r\n    \"Optimizely | CEC\",\r\n    \"Opinion Lab | Core\",\r\n    \"Soasta | Core\",\r\n    \"Medallia | Core\"\r\n];\r\n\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdna.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdna.clicktale.net\/www\/\u0027;\r\n}\r\n\r\nClickTaleGlobal.init.monitorScriptName = \"Monitor-latest.js\";\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 typeof ClickTaleGlobal.init.pmc === \"function\" \u0026\u0026 ClickTaleGlobal.init.pmc(autoMonitorConfig);\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\tvar pccSrc = pccSource ? pccSource + \u0027c08d3614-4c2f-4b0d-b983-40bd407e56a4.js?DeploymentConfigName=Release_20180831\u0026Version=13\u0027 : (isHttps ? \u0027https:\/\/cdna.clicktale.net\/www29\/pcc\/c08d3614-4c2f-4b0d-b983-40bd407e56a4.js?DeploymentConfigName=Release_20180831\u0026Version=13\u0027 : \u0027http:\/\/cdna.clicktale.net\/www29\/pcc\/c08d3614-4c2f-4b0d-b983-40bd407e56a4.js?DeploymentConfigName=Release_20180831\u0026Version=13\u0027);\r\n\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\tpccScriptElement.src = pccSrc;\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\r\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\twindow.ClickTaleGlobal.PCCExists = true;\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=17, \r\n\t\tRatio=1, \r\n\t\tPartitionPrefix=\"www29\",\r\n\t\tSubsId=233167;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\tif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n}\r\n\r\nwindow.ClickTaleSettings.PTC.InitFuncs = window.ClickTaleSettings.PTC.InitFuncs || [];\r\nwindow.ClickTaleSettings.PTC.InitFuncs.push(function() {\r\n    var pcc = document.querySelector(\u0027script[src*=\"clicktale\"][src*=\"pcc\"]\u0027);\r\n    if (pcc) {\r\n        var versionmatch = pcc.src.match(\/DeploymentConfigName=(.+)\/i);\r\n        if (versionmatch \u0026\u0026 typeof ClickTaleExec === \u0027function\u0027) {\r\n            ClickTaleExec(\"console.info(\u0027\" + versionmatch[0] + \"\u0027);\");\r\n            ClickTaleEvent(\"Config: \" + versionmatch[1].replace(\/\\\u0026.+\/, \u0027\u0027));\r\n        }\r\n    }\r\n});\r\n\r\nfunction isOpacity(element) {\r\n    if (typeof element === \u0027string\u0027 \u0026\u0026 (element = document.querySelector(element)) \u0026\u0026 element.offsetHeight \u003e 0 \u0026\u0026 element.offsetWidth \u003e 0 \u0026\u0026 element.style.opacity === \u00271\u0027) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nfunction isVisible(element) {\r\n    if (element \u0026\u0026 typeof element == \u0027string\u0027) {\r\n        element = document.querySelectorAll(element);\r\n    }\r\n    if (element instanceof NodeList \u0026\u0026 element.length \u003e 0) {\r\n        return Array.prototype.filter.call(element, function(el) {\r\n            return isVisible(el);\r\n        }).length == element.length;\r\n    }\r\n    if (element instanceof Element) {\r\n        return !!(element \u0026\u0026 !!(element.compareDocumentPosition(document) \u0026 Node.DOCUMENT_POSITION_CONTAINS) \u0026\u0026 ((element.offsetWidth \u003e 0 \u0026\u0026 element.offsetHeight \u003e 0) || element[\u0027getClientRects\u0027]().length \u003e 0));\r\n    }\r\n    return false;\r\n};\r\n\r\nfunction doUpload() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        ClickTaleUploadPageNow();\r\n        window.ClickTaleSettings.PTC.UploadPageHappened = true;\r\n    };\r\n};\r\n\r\nfunction isReadyToRecord() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        \/\/GAP-189,GAP-228\r\n        if (\/\\\/checkout\\\/(?:search|category).do\/i.test(document.location.href)) {\r\n            return !!document.querySelector(\u0027div.favorites\u0027) \u0026\u0026 document.querySelectorAll(\u0027img.product-card--img[src*=\"assets\"]\u0027).length \u003e 1 ;\r\n        }\r\n\t\t\r\n        \/\/GAP-9\r\n        else if (document.location.href.indexOf(\u0027\/checkout\/order.do\u0027) \u003e -1) {\r\n            return isOpacity(\u0027#signInInput\u0027) || isOpacity(\u0027#shippingInput\u0027) || isOpacity(\u0027#giftingInput\u0027) || isOpacity(\u0027#billingInput\u0027) || isOpacity(\u0027#orderPlacementInput\u0027) || isVisible(\u0027#requestTimeOutPanel\u0027) || isVisible(\u0027#sessionTimeOutPanel\u0027);\r\n        } else if (location.pathname.toLowerCase().indexOf(\u0027\/buy\/shopping_bag.do\u0027) \u003e -1) {\r\n            return document.querySelectorAll(\u0027.shoppingBagCheckout\u0027).length \u003e 0 \u0026\u0026 document.querySelectorAll(\u0027.productDetails\u0027).length \u003e 0;\r\n        } else if (location.pathname.toLowerCase() === \u0027\/checkout\/place-order\/\u0027) {\r\n            return !(document.querySelector(\u0027.processing__circle\u0027));\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nfunction startRecordingChecks() {\r\n    if (\/\\\/bright\\\/\/i.test(location.pathname) \u0026\u0026 top != self) {\r\n        if (window.innerWidth == 0 \u0026\u0026 window.innerHeight == 0) {\r\n            setTimeout(startRecordingChecks, 500);\r\n            return;\r\n        }\r\n    }\r\n\r\n    if (typeof ClickTaleDelayUploadPage === \u0027function\u0027) {\r\n        ClickTaleDelayUploadPage();\r\n\r\n        \/\/var PWADelay = \/pwa=true\/i.test(location.search) ? 5000 : 0;\r\n        var intervals = (document.location.href.indexOf(\u0027\/checkout\/order.do\u0027) \u003e -1) ? 5 : 10;\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 1000, intervals, doUpload);\r\n\r\n        var initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\n        for (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n            if (typeof initFuncs[i] === \u0027function\u0027) {\r\n                initFuncs[i]();\r\n            }\r\n        }\r\n    }\r\n\r\n    window.ClickTaleIncludedOnDOMReady = true;\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n\r\n    ClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\r\n    if ((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString())) {\r\n        ClickTalePrevOnReady();\r\n    }\r\n}\r\n\r\nif (document.readyState = \u0027complete\u0027) {\r\n    setTimeout(startRecordingChecks, 1000);\r\n} else {\r\n    window.addEventListener(\u0027load\u0027, function() {\r\n        setTimeout(startRecordingChecks, 1000);\r\n    });\r\n}\r\n\r\n\/\/don\u0027t continue with regular recording\r\nreturn;\r\n\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\t\r\n\twrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",n,!1)}catch(e){}function n(e){var t,n;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(!function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=o(\"script\");e.setAttribute(\"type\",\"application\/javascript\"),e.setAttribute(\"id\",\"ctTestRulesModule\"),e.onload=function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")};var t=ClickTaleGetPID();e.src=ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+t,document.getElementById(\"ctTestRulesModule\")||document.body.appendChild(e)}(),(n=o(\"script\")).setAttribute(\"type\",\"text\/javascript\"),n.setAttribute(\"id\",\"ctVisualEditorClientModule\"),n.src=ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\",document.getElementById(\"ctVisualEditorClientModule\")||document.body.appendChild(n)))}function o(e){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",e):document.createElement(e)}}();");
		document.body.appendChild(script);	})();
	}

//Signature:Jn2ZCXgw6ykpKJ0MU6BKCq4nCvUvngJD8E5LC+Aj/LqtDD/6NrjdMk0orWOzLtptQbIXaNO1On77Y2KLqec8Kgh59SFRL7W4FX6OUIAocNTthXQ5GzvfBn7pBFRf7CVUvPM8yR56vGalLRtAziYp9/m2K9llep3P3euDI5RYoSg=